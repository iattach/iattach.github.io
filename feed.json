{
    "version": "https://jsonfeed.org/version/1",
    "title": "iattachの小站",
    "subtitle": "Where is the end of the humain?",
    "icon": "https://hexo.iattach.top/images/favicon.ico",
    "description": "Why worry about something that isn't going to happen ?",
    "home_page_url": "https://hexo.iattach.top",
    "items": [
        {
            "id": "https://hexo.iattach.top/2024/09/16/github-actions-jenkins/",
            "url": "https://hexo.iattach.top/2024/09/16/github-actions-jenkins/",
            "title": "github actions jenkins",
            "date_published": "2024-09-16T08:26:39.000Z",
            "content_html": "<h1 id=\"github-workflow-设置yaml文件\"><a class=\"anchor\" href=\"#github-workflow-设置yaml文件\">#</a> github workflow 设置 yaml 文件</h1>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Frontend pr workflow</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token key atrule\">on</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 在 develop 分支上触发 PR 的 build</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token key atrule\">pull_request</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token key atrule\">branches</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">\"develop\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token key atrule\">jobs</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token key atrule\">build</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 任务名</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token key atrule\">runs-on</span><span class=\"token punctuation\">:</span> <span class=\"token punctuation\">[</span>self<span class=\"token punctuation\">-</span>hostsd<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token key atrule\">steps</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 步骤列表</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/checkout@v3 <span class=\"token comment\"># 步骤使用 actions 组织的 action，切换仓库，版本 v3</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> Use Node.js 16.xx.x <span class=\"token comment\"># 使用内部 action</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>          <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> setupnoderepo</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>          <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 此处为传参</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>            <span class=\"token key atrule\">node-version</span><span class=\"token punctuation\">:</span> 16.xx.x</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token key atrule\">registry-url</span><span class=\"token punctuation\">:</span> internal public repository url</pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> cache npm dependencies <span class=\"token comment\"># 使用 actions 组织的 action，仓库缓存</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>          <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> actions/cache@v3</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>          <span class=\"token key atrule\">id</span><span class=\"token punctuation\">:</span> npm_cache</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>          <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> node_modules</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token key atrule\">key</span><span class=\"token punctuation\">:</span> $&lt;<span class=\"token tag\">!--swig</span>￼0<span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span><span class=\"token punctuation\">></span><span class=\"token punctuation\">-</span>node<span class=\"token punctuation\">-</span>$&lt;<span class=\"token tag\">!--swig</span>￼1<span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span><span class=\"token punctuation\">></span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> install packages <span class=\"token comment\"># 运行 bash 命令的步骤</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>          <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm install</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>          <span class=\"token key atrule\">if</span><span class=\"token punctuation\">:</span> steps.npm_cache.outputs.cache<span class=\"token punctuation\">-</span>hit <span class=\"token tag\">!=</span> 'true' <span class=\"token comment\">#只在没有缓存成功的状态下运行</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm run build <span class=\"token comment\"># 运行 bash 命令</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">run</span><span class=\"token punctuation\">:</span> npm run test</pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> install and start sonar analysis <span class=\"token comment\"># 使用内部 action 仓库</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>          <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> xxx/sonar<span class=\"token punctuation\">-</span>xx@stable</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>          <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>            <span class=\"token key atrule\">scanner-version</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'xxx'</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            <span class=\"token key atrule\">sonar-properties</span><span class=\"token punctuation\">:</span> <span class=\"token string\">'sonar-project.properties'</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>            <span class=\"token key atrule\">sonar-token</span><span class=\"token punctuation\">:</span> $&lt;<span class=\"token tag\">!--swig</span>￼2<span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span><span class=\"token punctuation\">></span> <span class=\"token comment\"># token 位于仓库的设置安全选项处</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>        <span class=\"token comment\">#自定义 action </span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token punctuation\">-</span> name：my custom private github actions</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>          <span class=\"token key atrule\">uses</span><span class=\"token punctuation\">:</span> ./.github/actions/frontend<span class=\"token punctuation\">-</span>ci <span class=\"token comment\"># 这里不能使用 Org / 自己的仓库 @版本 只能使用相对路径</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>          <span class=\"token key atrule\">with</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>            <span class=\"token key atrule\">docker-username</span><span class=\"token punctuation\">:</span> $&lt;<span class=\"token tag\">!--swig</span>￼3<span class=\"token punctuation\">-</span><span class=\"token punctuation\">-</span><span class=\"token punctuation\">></span><span class=\"token scalar string\"></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>            docker-password: $</pre></td></tr><tr><td data-num=\"45\"></td><td><pre>            sonar-dsp-token: $</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>            build-image: false</span></pre></td></tr></table></figure>",
            "tags": [
                "技术"
            ]
        },
        {
            "id": "https://hexo.iattach.top/2024/09/09/%E8%AE%B0%E5%BD%95-9-9/",
            "url": "https://hexo.iattach.top/2024/09/09/%E8%AE%B0%E5%BD%95-9-9/",
            "title": "记录-9-9",
            "date_published": "2024-09-09T09:01:15.000Z",
            "content_html": "<h1 id=\"在转pdf中去除endnotes\"><a class=\"anchor\" href=\"#在转pdf中去除endnotes\">#</a> 在转 PDF 中去除 endnotes</h1>\n<p>使用 Docx4j 将 word 转 pdf 中，endnotes 会自动生成在文件末尾，虽然在 word 原文件中是完全空白的，但是 pdf 依然会生成没有内容的大大的 Endnotes 标题。Java 中可以在 word 中进行预处理去除 endnotes 的部分。</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">EndnotesPart</span> endnotesPart <span class=\"token operator\">=</span> wordMLP<span class=\"token punctuation\">.</span><span class=\"token function\">getMainDocumentPart</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getEndNotesPart</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    endnotesPart<span class=\"token punctuation\">.</span><span class=\"token function\">remove</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token comment\">// 测试</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token class-name\">MainDocumentPart</span> mainDocumentPart <span class=\"token operator\">=</span> <span class=\"token function\">mock</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MainDocumentPart</span><span class=\"token punctuation\">.</span><span class=\"token keyword\">class</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token function\">doReturn</span><span class=\"token punctuation\">(</span>mainDocumentPart<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">when</span><span class=\"token punctuation\">(</span>wordMLP<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getMainDocumentPart</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token function\">doReturn</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">EndnotesPart</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">when</span><span class=\"token punctuation\">(</span>mainDocumentPart<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getEndNotesPart</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h1 id=\"sql-custom-order-by\"><a class=\"anchor\" href=\"#sql-custom-order-by\">#</a> SQL custom order by</h1>\n<figure class=\"highlight sql\"><figcaption data-lang=\"SQL\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">order</span> <span class=\"token keyword\">by</span> </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">case</span> </pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">when</span> <span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> <span class=\"token string\">'apple'</span> <span class=\"token keyword\">then</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">when</span> <span class=\"token keyword\">type</span> <span class=\"token operator\">=</span> <span class=\"token string\">'banana'</span> <span class=\"token keyword\">then</span> <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">else</span> <span class=\"token number\">2</span> </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">end</span> <span class=\"token keyword\">desc</span></pre></td></tr></table></figure>",
            "tags": [
                "技术"
            ]
        },
        {
            "id": "https://hexo.iattach.top/2024/09/02/React-Spring-%E5%89%8D%E5%90%8E%E7%AB%AF%E5%A6%82%E4%BD%95%E6%98%BE%E7%A4%BAbase64%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD%E8%BF%9B%E5%BA%A6%E6%9D%A1/",
            "url": "https://hexo.iattach.top/2024/09/02/React-Spring-%E5%89%8D%E5%90%8E%E7%AB%AF%E5%A6%82%E4%BD%95%E6%98%BE%E7%A4%BAbase64%E6%96%87%E4%BB%B6%E4%B8%8B%E8%BD%BD%E8%BF%9B%E5%BA%A6%E6%9D%A1/",
            "title": "React + Spring 前后端如何显示base64文件下载进度条",
            "date_published": "2024-09-02T10:20:39.000Z",
            "content_html": "<h1 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h1>\n<p>因为业务要求，查了下怎么获取进度，但是资料很分散。虽然又被业务搁置了，还是记录下怎么实现的。</p>\n<h2 id=\"现有代码\"><a class=\"anchor\" href=\"#现有代码\">#</a> 现有代码</h2>\n<h3 id=\"前端react\"><a class=\"anchor\" href=\"#前端react\">#</a> 前端 React</h3>\n<p>axios 向服务器端通信</p>\n<pre><code class=\"language-TypeScript\">async post&lt;T&gt;(url: string, body: any): Promise&lt;T&gt;&#123;\n    return axios\n        .post(`$&#123;this.serverDomain&#125;$&#123;url&#125;`), JSON.stringify(body),&#123;\n            headers: this.headers,\n        &#125;)\n        .then(\n            (axiosResponse)=&gt;(\n                return axiosReponse.data as T;\n            ),\n            (axiosError)=&gt;(\n                return axiosError?.reponse?.data || axiosError;\n            ),\n        );\n&#125;\n</code></pre>\n<p>service 层的相关方法</p>\n<pre><code class=\"language-TypeScript\">async download(ids: number[], locale: string):\nPromise&lt;ApiResponse&lt;Blob&gt;&gt; &#123;\n    const url = `$&#123;this.baseUrl&#125;/download?locale=$&#123;locale&#125;`;\n    return this.httpService.post&lt;FileReponse&gt;(url, [...ids]).then(\n        (response: any) =&gt; response,\n        (error) =&gt; error,\n    );\n&#125;\n</code></pre>\n<p>component 层调用</p>\n<pre><code class=\"language-TypeScript\">extractService.download(ids, intl.locale).then((response: ApiResponse&lt;Blob&gt;)=&gt;&#123;\n    //...\n    const linkSource = `data:application/vnd.openxmlformas-officedocument.spreadsheetml.sheet;base64,^$&#123;reponse.data&#125;`;\n    const link = document.createElement(`a`);\n    link.href = linkSource;\n    link.download = 'extract.zip';\n    link.click();\n    //...\n&#125;);\n</code></pre>\n<h3 id=\"后端spring\"><a class=\"anchor\" href=\"#后端spring\">#</a> 后端 Spring</h3>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//...</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">ByteArrayOutputStream</span> baos <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ByteArrayOutputStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token class-name\">ZipOutputStream</span> zos <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ZipOutputStream</span><span class=\"token punctuation\">(</span>baos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">final</span> <span class=\"token keyword\">var</span> fileByteArray <span class=\"token operator\">=</span> baos<span class=\"token punctuation\">.</span><span class=\"token function\">toByteArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">final</span> <span class=\"token keyword\">var</span> fileResponseDto <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FileResponesDto</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>fileResponseDto<span class=\"token punctuation\">.</span><span class=\"token function\">setData</span><span class=\"token punctuation\">(</span>fileByteArray<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">return</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">.</span><span class=\"token constant\">SC_OK</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">body</span><span class=\"token punctuation\">(</span>fileResponseDto<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h1 id=\"解决过程\"><a class=\"anchor\" href=\"#解决过程\">#</a> 解决过程</h1>\n<p>一开始找解决方案的时候很迷茫，因为一方面后端处理生成文件的时间在我的认知里是不可预估的，一方面怎么获取实时下载进度也是难以想象的。在寻找的过程中，发现进度条可能只是用来处理已生成好的文件，就像 chrome 下载时有绿色转动的小圈进度条。另一方面原以为是 react 本身也可以通过方法的内部获取实时下载好的文件大小，我还以为需要 webpack 之类服务器端实时发包的功能。</p>\n<p>在边找边试的过程中，也遇到了不少坑。首先是大部分资料用的都是过时的 addEventListener，我还以为 react 也有，找了半天发现业务底层是 axios，可以直接在 parameter 加 onDownloadProgress。一些旁门左道试图使用 transfer-encoding: chunked，这样加了之后反而弄巧成拙更加复杂了。之后发现只要在后端加入 content-lengh 就能获取文件长度，这个属性在前端的 header 里面也以 total 形式出现。但是加了之后反而下载不了，因为 content-length 是整个数据包的大小，而并非是指单个 json 数据包大小，如果只是下载文件倒是没有问题，像业务这种需要 dto 传送其他信息的，就不能用，因为到达 length 之后 json 数据包直接就结束传递了，所以导致 json 的数据不完整。解决方法是使用自定的属性头比如 File-size，但是因为浏览器安全需要不允许非 expose 的 header 出现，所以浏览器会警告并停止获取 json。如何去使浏览器信任自己的设置的 header 呢？就需要在 response 响应里面提前说好，在 Access-Control-Expose-headers 里面加入我们自己的头。</p>\n<p>另外使得浏览器不会显示自己的进度条，需要加入以下方法：</p>\n<pre><code class=\"language-TypeScript\">windows.URL.revokeObjectURL(linkSource);\n</code></pre>\n<p>example 代码实现：</p>\n<pre><code class=\"language-TypeScript\">async post&lt;T&gt;(url: string, body: any, onDownloadProgress: any): Promise&lt;T&gt;&#123;\n    return axios\n        .post(`$&#123;this.serverDomain&#125;$&#123;url&#125;`), JSON.stringify(body),&#123;\n            headers: this.headers,\n            onDownloadProgress: onDownloadProgress\n        &#125;)\n        .then(\n            (axiosResponse)=&gt;(\n                return axiosReponse.data as T;\n            ),\n            (axiosError)=&gt;(\n                return axiosError?.reponse?.data || axiosError;\n            ),\n        );\n&#125;\n\n...\n\nasync download(ids: number[], locale: string, onDownloadProgress: (progressEvent: any) =&gt; void):\nPromise&lt;ApiResponse&lt;Blob&gt;&gt; &#123;\n    const url = `$&#123;this.baseUrl&#125;/download?locale=$&#123;locale&#125;`;\n    return this.httpService.post&lt;FileReponse&gt;(url, [...ids],onDownloadProgress).then(\n        (response: any) =&gt; response,\n        (error) =&gt; error,\n    );\n&#125;\n\n...\n\nconst onDownloadProgress = (progressEvent: any) =&gt; &#123;\n    let total = progressEvent.currentTarget.getResponseHeader('File-Size');\n    let percentCompleted = total ? Math.floor(progressEvent.loaded / total) * 100).toFixed(2) : 1\n&#125;\nextractService.download(ids, intl.locale, onDownloadProgress).then((response: ApiResponse&lt;Blob&gt;)=&gt;&#123;\n    //...\n    const linkSource = `data:application/vnd.openxmlformas-officedocument.spreadsheetml.sheet;base64,^$&#123;reponse.data&#125;`;\n    const link = document.createElement(`a`);\n    link.href = linkSource;\n    link.download = 'extract.zip';\n    link.click();\n    //...\n    window.URL.revokeObjectURL(linkSource);\n&#125;);\n</code></pre>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">//...</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token class-name\">ByteArrayOutputStream</span> baos <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ByteArrayOutputStream</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token class-name\">ZipOutputStream</span> zos <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ZipOutputStream</span><span class=\"token punctuation\">(</span>baos<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">final</span> <span class=\"token keyword\">var</span> fileByteArray <span class=\"token operator\">=</span> baos<span class=\"token punctuation\">.</span><span class=\"token function\">toByteArray</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">final</span> <span class=\"token keyword\">var</span> fileResponseDto <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FileResponesDto</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>fileResponseDto<span class=\"token punctuation\">.</span><span class=\"token function\">setData</span><span class=\"token punctuation\">(</span>fileByteArray<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">return</span> <span class=\"token class-name\">ResponseEntity</span><span class=\"token punctuation\">.</span><span class=\"token function\">status</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">HttpStatus</span><span class=\"token punctuation\">.</span><span class=\"token constant\">SC_OK</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token function\">header</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"Access-Control-Expose-Headers\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\"File-Size\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token function\">header</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"File-Size\"</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">String</span><span class=\"token punctuation\">.</span><span class=\"token function\">valueOf</span><span class=\"token punctuation\">(</span>fileByteArray<span class=\"token punctuation\">.</span>length<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">.</span><span class=\"token function\">body</span><span class=\"token punctuation\">(</span>fileResponseDto<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure>",
            "tags": [
                "技术"
            ]
        },
        {
            "id": "https://hexo.iattach.top/2024/09/02/INS-30131-%E6%89%A7%E8%A1%8C%E5%AE%89%E8%A3%85%E7%A8%8B%E5%BA%8F%E9%AA%8C%E8%AF%81%E6%89%80%E9%9C%80%E7%9A%84%E5%88%9D%E5%A7%8B%E8%AE%BE%E7%BD%AE%E5%A4%B1%E8%B4%A5-ORACLE%E5%AE%89%E8%A3%85%E9%97%AE%E9%A2%98-%E8%A7%A3%E5%86%B3-WIN10/",
            "url": "https://hexo.iattach.top/2024/09/02/INS-30131-%E6%89%A7%E8%A1%8C%E5%AE%89%E8%A3%85%E7%A8%8B%E5%BA%8F%E9%AA%8C%E8%AF%81%E6%89%80%E9%9C%80%E7%9A%84%E5%88%9D%E5%A7%8B%E8%AE%BE%E7%BD%AE%E5%A4%B1%E8%B4%A5-ORACLE%E5%AE%89%E8%A3%85%E9%97%AE%E9%A2%98-%E8%A7%A3%E5%86%B3-WIN10/",
            "title": "INS-30131 执行安装程序验证所需的初始设置失败 ORACLE安装问题 解决 WIN10",
            "date_published": "2024-09-02T10:19:41.000Z",
            "content_html": "<p>oraclede 安装成功进行下去费了我两天时间 果然中文搜索都不靠谱 按照错误名英文搜索 找到了解决办法。</p>\n<p>其他问题 我先总结一下：</p>\n<p>c 盘没共享 cmd net share c=c 或者计算机管理 新建共享 路径 c:\\名字为c，</p>\n<p>亦或是 路径用户名为中文 解禁 administrator 账户 安装，</p>\n<p>亦或是</p>\n<p>HKEY_LOCAL_MACHINE =&gt; SYSTEM =&gt; CurrentControlSet =&gt; Services =&gt; LanmanServer =&gt; Parameters =&gt; AutoShareServer 修改为 1</p>\n<p>HKEY_LOCAL_MACHINE =&gt; SYSTEM =&gt; CurrentControlSet =&gt; Services =&gt; LanmanServer =&gt; Parameters =&gt; AutoShareWKs 修改为 1</p>\n<p>但统统不靠谱 还有什么 所谓 cmd 下安装后加后缀的 hhhhhhhh</p>\n<p>直到我看到了</p>\n<p>I finally got the answer for this error, this was because of the machine name being big. While setting up a new machine we should ensure that the machine name is not bigger then the bios name. which is 15 chars. This will definitely work.</p>\n<p>？？？？？</p>\n<p>还有这种操作？</p>\n<p>然后我试了 计算机名果然超了 15 。。。。。</p>\n<p>重启安装没有错了</p>\n",
            "tags": [
                "技术"
            ]
        },
        {
            "id": "https://hexo.iattach.top/2024/09/02/Game-day-202409/",
            "url": "https://hexo.iattach.top/2024/09/02/Game-day-202409/",
            "title": "Game day 202409",
            "date_published": "2024-09-02T09:16:46.000Z",
            "content_html": "<h1 id=\"错误-can-not-pull-image\"><a class=\"anchor\" href=\"#错误-can-not-pull-image\">#</a> 错误 can not pull image</h1>\n<p>检查 mirantis secure registry，tags 为空，重新 run pipeline 来重新部署 image</p>\n<h1 id=\"log-检查到数据库链接失败\"><a class=\"anchor\" href=\"#log-检查到数据库链接失败\">#</a> log 检查到数据库链接失败</h1>\n<p>首先检查 database url 是否正确，之后检查本地连接，发现无法连接。之后上 do it know 查看是否 database 正常，检查到 database 被关闭。action 重启数据库</p>\n<h1 id=\"liveness-check-failed\"><a class=\"anchor\" href=\"#liveness-check-failed\">#</a> liveness check failed</h1>\n<p>config 中有个 service 占用了 application 使用的 port，导致 application 重启失败，更改端口到 8080</p>\n<h1 id=\"身份验证失败\"><a class=\"anchor\" href=\"#身份验证失败\">#</a> 身份验证失败</h1>\n<p>uat 环境不能登录，检查 homologation 设置，发现 k8s 设置中有两项中不同，检查并纠正</p>\n",
            "tags": [
                "技术"
            ]
        },
        {
            "id": "https://hexo.iattach.top/2024/01/13/Java-spring%E4%BD%BF%E7%94%A8Docx4j%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AAword%E6%96%87%E6%A1%A3%E5%B9%B6%E8%BE%93%E5%87%BA/",
            "url": "https://hexo.iattach.top/2024/01/13/Java-spring%E4%BD%BF%E7%94%A8Docx4j%E5%90%88%E5%B9%B6%E4%B8%A4%E4%B8%AAword%E6%96%87%E6%A1%A3%E5%B9%B6%E8%BE%93%E5%87%BA/",
            "title": "Java spring使用Docx4j合并两个word文档并输出",
            "date_published": "2024-01-13T10:51:23.000Z",
            "content_html": "<h1 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h1>\n<p>因为业务需求以及网上的解决方案不完整，花了两天时间研究出一行代码，所以写下此文就当 2023 与 2024 之间的承上启下之作了。（代码手打，有错自己改，狗头保命）</p>\n<p>之前的解决方案<br />\n在网上搜索 java spring 中对于文档的合并输出，解决方案不外乎</p>\n<ol>\n<li>使用商业付费 package：Merge Docx java</li>\n<li>使用 altchunk，以下代码摘自：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zb2FzZXJlbGUuYmxvZ3Nwb3QuY29tLzIwMTEvMDcvbWVyZ2UtZG9jeC1maWxlcy1pbi1qYXZhLXVzaW5nLWRvY3g0ai5odG1s\">https://soaserele.blogspot.com/2011/07/merge-docx-files-in-java-using-docx4j.html</span></li>\n</ol>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">class</span> <span class=\"token class-name\">DocxService</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">String</span> <span class=\"token constant\">CONTENT_TYPE</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"application/vnd.openxmlformats-officedocument.wordprocessingml.document\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token keyword\">public</span> <span class=\"token class-name\">InputStream</span> <span class=\"token function\">mergeDocx</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">final</span> <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">InputStream</span><span class=\"token punctuation\">></span></span> streams<span class=\"token punctuation\">)</span> <span class=\"token keyword\">throws</span> <span class=\"token class-name\">Docx4JException</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">IOException</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token class-name\">WordprocessingMLPackage</span> target <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">final</span> <span class=\"token class-name\">File</span> generated <span class=\"token operator\">=</span> <span class=\"token class-name\">File</span><span class=\"token punctuation\">.</span><span class=\"token function\">createTempFile</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"generated\"</span><span class=\"token punctuation\">,</span> <span class=\"token string\">\".docx\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">int</span> chunkId <span class=\"token operator\">=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token class-name\">Iterator</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">InputStream</span><span class=\"token punctuation\">></span></span> it <span class=\"token operator\">=</span> streams<span class=\"token punctuation\">.</span><span class=\"token function\">iterator</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span>it<span class=\"token punctuation\">.</span><span class=\"token function\">hasNext</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>      <span class=\"token class-name\">InputStream</span> is <span class=\"token operator\">=</span> it<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>is <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>target <span class=\"token operator\">==</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>          <span class=\"token comment\">// Copy first (master) document</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>          <span class=\"token class-name\">OutputStream</span> os <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FileOutputStream</span><span class=\"token punctuation\">(</span>generated<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>          os<span class=\"token punctuation\">.</span><span class=\"token function\">write</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">IOUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">toByteArray</span><span class=\"token punctuation\">(</span>is<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>          os<span class=\"token punctuation\">.</span><span class=\"token function\">close</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>          target <span class=\"token operator\">=</span> <span class=\"token class-name\">WordprocessingMLPackage</span><span class=\"token punctuation\">.</span><span class=\"token function\">load</span><span class=\"token punctuation\">(</span>generated<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>          <span class=\"token comment\">// Attach the others (Alternative input parts)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>          <span class=\"token function\">insertDocx</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">.</span><span class=\"token function\">getMainDocumentPart</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token class-name\">IOUtils</span><span class=\"token punctuation\">.</span><span class=\"token function\">toByteArray</span><span class=\"token punctuation\">(</span>is<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> chunkId<span class=\"token operator\">++</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>      <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>target <span class=\"token operator\">!=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>      target<span class=\"token punctuation\">.</span><span class=\"token function\">save</span><span class=\"token punctuation\">(</span>generated<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>      <span class=\"token keyword\">return</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">FileInputStream</span><span class=\"token punctuation\">(</span>generated<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>      <span class=\"token keyword\">return</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>  <span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">void</span> <span class=\"token function\">insertDocx</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MainDocumentPart</span> main<span class=\"token punctuation\">,</span> <span class=\"token keyword\">byte</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> bytes<span class=\"token punctuation\">,</span> <span class=\"token keyword\">int</span> chunkId<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>      <span class=\"token class-name\">AlternativeFormatInputPart</span> afiPart <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">AlternativeFormatInputPart</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">PartName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/part\"</span> <span class=\"token operator\">+</span> chunkId <span class=\"token operator\">+</span> <span class=\"token string\">\".docx\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>      afiPart<span class=\"token punctuation\">.</span><span class=\"token function\">setContentType</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">ContentType</span><span class=\"token punctuation\">(</span><span class=\"token constant\">CONTENT_TYPE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>      afiPart<span class=\"token punctuation\">.</span><span class=\"token function\">setBinaryData</span><span class=\"token punctuation\">(</span>bytes<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>      <span class=\"token class-name\">Relationship</span> altChunkRel <span class=\"token operator\">=</span> main<span class=\"token punctuation\">.</span><span class=\"token function\">addTargetPart</span><span class=\"token punctuation\">(</span>afiPart<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>      <span class=\"token class-name\">CTAltChunk</span> chunk <span class=\"token operator\">=</span> <span class=\"token class-name\">Context</span><span class=\"token punctuation\">.</span><span class=\"token function\">getWmlObjectFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">createCTAltChunk</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>      chunk<span class=\"token punctuation\">.</span><span class=\"token function\">setId</span><span class=\"token punctuation\">(</span>altChunkRel<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>      main<span class=\"token punctuation\">.</span><span class=\"token function\">addObject</span><span class=\"token punctuation\">(</span>chunk<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>      e<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>  <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>以及自己编写相应的代码，但是需要懂 docx4j 的运用以及 docx 解压包之后的 xml 引用的原理，这里就不赘述了。</p>\n<h1 id=\"docx4j从wordprocessingmlpackage的层面合并文档\"><a class=\"anchor\" href=\"#docx4j从wordprocessingmlpackage的层面合并文档\">#</a> Docx4j 从 WordprocessingMLPackage 的层面合并文档</h1>\n<p>因为具体需求，直接跳过基础转入合并部分：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">public</span> <span class=\"token keyword\">void</span> <span class=\"token function\">mergeFile</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">WordprocessingMLPackage</span> wordMLP<span class=\"token punctuation\">,</span> <span class=\"token class-name\">WordprocessingMLPackage</span> wordMLToP<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token comment\">// 通过 xpath 获取 docx 中 w:body 的正文节点</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        <span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span> bodies <span class=\"token operator\">=</span> wordMLToP<span class=\"token punctuation\">.</span><span class=\"token function\">getMainDocumentPart</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getJAXBNodesViaXPath</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"//w:body\"</span><span class=\"token punctuation\">,</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token comment\">// 对于多个 body 逐次遍历加入，这里的样式默认与主文档有关</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span> bodyObject <span class=\"token operator\">:</span> bodies <span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token class-name\">Body</span> body <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Body</span><span class=\"token punctuation\">)</span> bodyObject<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>            <span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span> content <span class=\"token operator\">:</span> body<span class=\"token punctuation\">.</span><span class=\"token function\">getContent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> wordMLP<span class=\"token punctuation\">.</span><span class=\"token function\">getMainDocumentPart</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addObject</span><span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> e<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">throw</span> <span class=\"token class-name\">TechnicalException</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span><span class=\"token function\">getMessage</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>但是这里的代码只考虑到了 body 部分，并没有考虑到 docx 中的 relashionship 中 rId 的重复和资源不能引入的问题，最后需要合并的文档也并没有做到另启一页。</p>\n<h1 id=\"加入分页符\"><a class=\"anchor\" href=\"#加入分页符\">#</a> 加入分页符</h1>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">private</span> <span class=\"token keyword\">static</span> <span class=\"token keyword\">final</span> <span class=\"token class-name\">ObjectFactory</span> objectFactory <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">ObjectFactory</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">void</span> <span class=\"token function\">addPageBreak</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">MainDocumentPart</span> dp<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token class-name\">P</span> paragraph <span class=\"token operator\">=</span> objectFactory<span class=\"token punctuation\">.</span><span class=\"token function\">createP</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token class-name\">R</span> run <span class=\"token operator\">=</span> objectFactory<span class=\"token punctuation\">.</span><span class=\"token function\">createR</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    paragraph<span class=\"token punctuation\">.</span><span class=\"token function\">getContent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>run<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token class-name\">Br</span> br <span class=\"token operator\">=</span> objectFactory<span class=\"token punctuation\">.</span><span class=\"token function\">createBr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    run<span class=\"token punctuation\">.</span><span class=\"token function\">getContent</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">add</span><span class=\"token punctuation\">(</span>br<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    br<span class=\"token punctuation\">.</span><span class=\"token function\">setType</span><span class=\"token punctuation\">(</span><span class=\"token class-name\"><span class=\"token namespace\">org<span class=\"token punctuation\">.</span>docx4j<span class=\"token punctuation\">.</span>wml<span class=\"token punctuation\">.</span></span>STBrType</span><span class=\"token punctuation\">.</span><span class=\"token constant\">PAGE</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    documentPart<span class=\"token punctuation\">.</span><span class=\"token function\">setObject</span><span class=\"token punctuation\">(</span>paragraph<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><h1 id=\"重建图片索引\"><a class=\"anchor\" href=\"#重建图片索引\">#</a> 重建图片索引</h1>\n<p>因为文档需要，一些标题段前需要 svg 进行修饰，网上目前给到的方案如下：</p>\n<p>可以参考<br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9zdGFja292ZXJmbG93LmNvbS9xdWVzdGlvbnMvMjM3OTY0NjgvbWVyZ2Utd29yZGRvY3gtZG9jdW1lbnRzLXdpdGgtZG9jeDRqLWhvdy10by1jb3B5LWltYWdlcw==\"> https://stackoverflow.com/questions/23796468/merge-worddocx-documents-with-docx4j-how-to-copy-images</span></p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token class-name\">List</span><span class=\"token generics\"><span class=\"token punctuation\">&lt;</span><span class=\"token class-name\">Object</span><span class=\"token punctuation\">></span></span> blips <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">getMainDocumentPart</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getJAXBNodesViaXPath</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"//a:blip\"</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">for</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Object</span> el <span class=\"token operator\">:</span> blips<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">try</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token class-name\">CTBlip</span> blip <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">CTBlip</span><span class=\"token punctuation\">)</span> el<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token class-name\">RelationshipsPart</span> parts <span class=\"token operator\">=</span> s<span class=\"token punctuation\">.</span><span class=\"token function\">getMainDocumentPart</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getRelationshipsPart</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        <span class=\"token class-name\">Relationship</span> rel <span class=\"token operator\">=</span> parts<span class=\"token punctuation\">.</span><span class=\"token function\">getRelationshipByID</span><span class=\"token punctuation\">(</span>blip<span class=\"token punctuation\">.</span><span class=\"token function\">getEmbed</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token class-name\">Part</span> part <span class=\"token operator\">=</span> parts<span class=\"token punctuation\">.</span><span class=\"token function\">getPart</span><span class=\"token punctuation\">(</span>rel<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>part <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">ImagePngPart</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ImagePngPart</span><span class=\"token punctuation\">)</span> part<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>part <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">ImageJpegPart</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ImageJpegPart</span><span class=\"token punctuation\">)</span> part<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>part <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">ImageBmpPart</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ImageBmpPart</span><span class=\"token punctuation\">)</span> part<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>part <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">ImageGifPart</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ImageGifPart</span><span class=\"token punctuation\">)</span> part<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>part <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">ImageEpsPart</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ImageEpsPart</span><span class=\"token punctuation\">)</span> part<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>part <span class=\"token keyword\">instanceof</span> <span class=\"token class-name\">ImageTiffPart</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            <span class=\"token class-name\">System</span><span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">.</span><span class=\"token function\">println</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token class-name\">ImageTiffPart</span><span class=\"token punctuation\">)</span> part<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getBytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token class-name\">Relationship</span> newrel <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span><span class=\"token function\">getMainDocumentPart</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addTargetPart</span><span class=\"token punctuation\">(</span>part<span class=\"token punctuation\">,</span> <span class=\"token class-name\">AddPartBehaviour</span><span class=\"token punctuation\">.</span><span class=\"token constant\">RENAME_IF_NAME_EXISTS</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        blip<span class=\"token punctuation\">.</span><span class=\"token function\">setEmbed</span><span class=\"token punctuation\">(</span>newrel<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        f<span class=\"token punctuation\">.</span><span class=\"token function\">getMainDocumentPart</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">addTargetPart</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">.</span><span class=\"token function\">getParts</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">getParts</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token function\">get</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">new</span> <span class=\"token class-name\">PartName</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"/word/\"</span> <span class=\"token operator\">+</span> rel<span class=\"token punctuation\">.</span><span class=\"token function\">getTarget</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">catch</span> <span class=\"token punctuation\">(</span><span class=\"token class-name\">Exception</span> ex<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        ex<span class=\"token punctuation\">.</span><span class=\"token function\">printStackTrace</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure><p>这个代码中间的 if 可以删去，但是因为是对 a:blip 的全文搜索，所以对 svg 的引用一点作用都没有。即使用此段代码后，虽然 media 资源都被加入、引用都被覆写，但是因为 document.xml 中 asvg:svgBlip 对于 r:embed 的引用依然生效，所以合并后的 media 索引依然会被之前选择合并到的文档索引覆盖，就是在_rels 目录下 document.xml.rels 会出现对于用一个 id 的重复指向。为了解决这一问题需要重置 a:blip 节点下的 a:extList 子节点。也就是在原来的答案代码中多加入一行代码：</p>\n<figure class=\"highlight java\"><figcaption data-lang=\"java\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>blip<span class=\"token punctuation\">.</span><span class=\"token function\">setEmbed</span><span class=\"token punctuation\">(</span>newrel<span class=\"token punctuation\">.</span><span class=\"token function\">getId</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>blip<span class=\"token punctuation\">.</span><span class=\"token function\">setExtList</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">null</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span><span class=\"token punctuation\">.</span></pre></td></tr></table></figure><p>至此就可以得到非常完好的合并 wordprocessingpackage 了。</p>\n",
            "tags": [
                "技术"
            ]
        },
        {
            "id": "https://hexo.iattach.top/2024/01/12/GameInput-Service-%E6%9C%8D%E5%8A%A1%E5%9B%A0%E4%B8%8B%E5%88%97%E9%94%99%E8%AF%AF%E8%80%8C%E5%81%9C%E6%AD%A2-%E5%A4%8D%E5%90%88%E6%96%87%E4%BB%B6-GameInput-Service-%E6%98%AF%E7%94%A8%E7%89%88%E6%9C%AC%E8%BE%83%E6%96%B0%E7%9A%84%E5%AD%98%E5%82%A8%E4%BA%A7%E7%94%9F%E7%9A%84/",
            "url": "https://hexo.iattach.top/2024/01/12/GameInput-Service-%E6%9C%8D%E5%8A%A1%E5%9B%A0%E4%B8%8B%E5%88%97%E9%94%99%E8%AF%AF%E8%80%8C%E5%81%9C%E6%AD%A2-%E5%A4%8D%E5%90%88%E6%96%87%E4%BB%B6-GameInput-Service-%E6%98%AF%E7%94%A8%E7%89%88%E6%9C%AC%E8%BE%83%E6%96%B0%E7%9A%84%E5%AD%98%E5%82%A8%E4%BA%A7%E7%94%9F%E7%9A%84/",
            "title": "GameInput Service 服务因下列错误而停止: 复合文件 GameInput Service 是用版本较新的存储产生的",
            "date_published": "2024-01-12T10:37:09.000Z",
            "content_html": "<p>win11 每天半夜重启死机，查了事件查看器，发现标题错误，解决方案引用 reddit</p>\n<p>The fix is simple. No need to wait for MS to address this issue.<br />\n 解决方法很简单。无需等待 MS 解决此问题。</p>\n<p>Double click both the Gaminput services and look at their location (&quot;path to executable&quot; it is called). You will see that one is located in your C:\\Program Files (x86)\\ folder, and the other is located in C:\\Windows\\System32 folder. With your explorer app of preference open both folders, find the executable (GameInputSvc.exe) and hover over it with your mouse. In a second a window will appear. Look at the creation date of the executable. I'm almost 100% certain that the one located in your Program Files (x86) is the the old one (creation date around beginning 2023)<br />\n 双击两个 Gaminput 服务并查看它们的位置（称为 “可执行文件的路径”）。您将看到一个位于 C：\\Program Files （x86）\\ 文件夹中，另一个位于 C：\\Windows\\System32 文件夹中。使用首选的资源管理器应用程序打开两个文件夹，找到可执行文件 （GameInputSvc.exe） 并用鼠标悬停在它上面。一秒钟后，将出现一个窗口。查看可执行文件的创建日期。我几乎 100% 确定位于您的程序文件 （x86） 中的那个是旧的（创建日期约为 2023 年初）</p>\n<p>Then check your installed apps (start &gt; settings &gt; apps &gt; installed apps). You will see Microsoft Game Input listed there. The date is somewhere around Feb/March 2023, so this one is old.<br />\n 然后检查已安装的应用程序（开始 &gt; 设置 &gt; 应用程序 &gt; 已安装的应用程序）。您将看到 Microsoft 游戏输入列在那里。日期在 2023 年 2 月 / 3 月左右，所以这个日期很旧。</p>\n<p>Click uninstall !<br />\n 点击卸载 ！</p>\n<p>Then you will see that the executable in the Program Files (x86) is removed. If there are leftovers just manually remove them (delete the complete Microsoft Gameinput folder - you will probably get a warning so you must delete this as administrator)<br />\n 然后，您将看到 Program Files（x86）中的可执行文件已被删除。如果有剩余部分，只需手动删除它们（删除完整的 Microsoft Gameinput 文件夹 - 您可能会收到警告，因此您必须以管理员身份将其删除）</p>\n<p>Restart your PC, check services and only 1 Gameinput will be listed there. If the service is not started, double click it, set it on automatic start, and finally start the service.<br />\n 重新启动您的 PC，检查服务，那里只会列出 1 个 Gameinput。如果服务未启动，请双击它，将其设置为自动启动，最后启动服务。</p>\n<p>The event viewer will no longer display the warnings.<br />\n 事件查看器将不再显示警告。</p>\n",
            "tags": [
                "技术"
            ]
        },
        {
            "id": "https://hexo.iattach.top/2023/10/05/xiaomi-uninstall/",
            "url": "https://hexo.iattach.top/2023/10/05/xiaomi-uninstall/",
            "title": "xiaomi-uninstall",
            "date_published": "2023-10-05T09:46:24.000Z",
            "content_html": "<p>小米 5s 垃圾中的垃圾</p>\n<h1 id=\"adb卸载应用bat脚本\"><a class=\"anchor\" href=\"#adb卸载应用bat脚本\">#</a> adb 卸载应用 bat 脚本</h1>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>@echo on</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>cmd /c adb shell pm list packages</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>cmd /c adb devices</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">#adb shell pm uninstall --user 0 com.sohu.inputmethod.sogou.xiaomi #小米定制版搜狗输入法（用第三方应用替换 Gboard 等）</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#adb shell pm uninstall --user 0 com.android.browser #浏览器（用第三方应用替换 chrome 等）</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>cmd /c adb shell pm uninstall <span class=\"token parameter variable\">--user</span> <span class=\"token number\">0</span> com.miui.video <span class=\"token comment\">#小米视频 （用第三方应用替换 nplayer 等）</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>cmd /c adb shell pm uninstall <span class=\"token parameter variable\">--user</span> <span class=\"token number\">0</span> com.miui.gallery <span class=\"token comment\">#相册（用第三方应用替换 #Google 相册等）</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>cmd /c adb shell pm uninstall <span class=\"token parameter variable\">--user</span> <span class=\"token number\">0</span> com.miui.player <span class=\"token comment\">#音乐（用第三方应用替换）</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>cmd /c adb shell pm uninstall <span class=\"token parameter variable\">--user</span> <span class=\"token number\">0</span> com.miui.mishare.connectivity <span class=\"token comment\">#小米互传（用第三方应用替换 #vivo 互传</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">#可卸载如：智能助理 搜索 小米黄页 快应用服务框架 服务与反馈 传送门 小爱翻译 小爱通话 小爱语音 游戏服务 analytics 用户反馈</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>cmd /c adb shell pm uninstall <span class=\"token parameter variable\">--user</span> <span class=\"token number\">0</span> com.miui.personalassistant <span class=\"token comment\">#智能助理（负一屏）（直接卸载，自己不使用）</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>cmd /c adb shell pm uninstall <span class=\"token parameter variable\">--user</span> <span class=\"token number\">0</span> com.android.quicksearchbox <span class=\"token comment\">#搜索（直接卸载，自己不使用）</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>cmd /c adb shell pm uninstall <span class=\"token parameter variable\">--user</span> <span class=\"token number\">0</span> com.miui.yellowpage <span class=\"token comment\">#生活黄页 (小米黄页)（直接卸载，自己不使用）</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>cmd /c adb shell pm uninstall <span class=\"token parameter variable\">--user</span> <span class=\"token number\">0</span> com.miui.hybrid <span class=\"token comment\">#快应用服务框架 (小米社区)（直接卸载，自己不使用） </span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>cmd /c adb shell pm uninstall <span class=\"token parameter variable\">--user</span> <span class=\"token number\">0</span> com.miui.miservice <span class=\"token comment\">#服务与反馈（直接卸载，自己不使用）</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>cmd /c adb shell pm uninstall <span class=\"token parameter variable\">--user</span> <span class=\"token number\">0</span> com.miui.contentextension <span class=\"token comment\">#传送门</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>cmd /c adb shell pm uninstall <span class=\"token parameter variable\">--user</span> <span class=\"token number\">0</span> com.xiaomi.aiasst.service <span class=\"token comment\">#AI 通话（小爱通话）</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>cmd /c adb shell pm uninstall <span class=\"token parameter variable\">--user</span> <span class=\"token number\">0</span> com.miui.voiceassist <span class=\"token comment\">#小爱同学（小爱语音）（直接卸载，自己不使用） </span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>cmd /c adb shell pm uninstall <span class=\"token parameter variable\">--user</span> <span class=\"token number\">0</span> com.xiaomi.aiasst.vision <span class=\"token comment\">#小爱翻译</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>cmd /c adb shell pm uninstall <span class=\"token parameter variable\">--user</span> <span class=\"token number\">0</span> com.xiaomi.gamecenter.sdk.service <span class=\"token comment\">#游戏服务</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>cmd /c adb shell pm uninstall <span class=\"token parameter variable\">--user</span> <span class=\"token number\">0</span> com.miui.analytics <span class=\"token comment\">#小米广告分析，必删（重启会自动安装）</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>cmd /c adb shell pm uninstall <span class=\"token parameter variable\">--user</span> <span class=\"token number\">0</span> com.miui.bugreport <span class=\"token comment\">#用户反馈</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\"># 2.2.2. 其他可删除（欢迎留言补充）</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>cmd /c adb shell pm uninstall <span class=\"token parameter variable\">--user</span> <span class=\"token number\">0</span> com.miui.systemAdSolution <span class=\"token comment\">#小米系统广告解决方案，必删</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>cmd /c adb shell pm uninstall <span class=\"token parameter variable\">--user</span> <span class=\"token number\">0</span> com.miui.translation.kingsoft <span class=\"token comment\">#金山翻译</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>cmd /c adb shell pm uninstall <span class=\"token parameter variable\">--user</span> <span class=\"token number\">0</span> com.miui.translation.youdao <span class=\"token comment\">#有道翻译</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>cmd /c adb shell pm uninstall <span class=\"token parameter variable\">--user</span> <span class=\"token number\">0</span> com.miui.translation.xmcloud <span class=\"token comment\">#小米云翻译</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>cmd /c adb shell pm uninstall <span class=\"token parameter variable\">--user</span> <span class=\"token number\">0</span> com.miui.translationservice <span class=\"token comment\">#翻译服务</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>cmd /c adb shell pm uninstall <span class=\"token parameter variable\">--user</span> <span class=\"token number\">0</span> com.xiaomi.ab <span class=\"token comment\">#小米商城系统组件</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>cmd /c adb shell pm uninstall <span class=\"token parameter variable\">--user</span> <span class=\"token number\">0</span> com.miui.accessibility <span class=\"token comment\">#小米闻声</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>cmd /c adb shell pm uninstall <span class=\"token parameter variable\">--user</span> <span class=\"token number\">0</span> com.xiaomi.migameservice <span class=\"token comment\">#游戏高能时刻</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>cmd /c adb shell pm uninstall <span class=\"token parameter variable\">--user</span> <span class=\"token number\">0</span> com.miui.voicetrigger <span class=\"token comment\">#语音唤醒</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>cmd /c adb shell pm uninstall <span class=\"token parameter variable\">--user</span> <span class=\"token number\">0</span> com.miui.nextpay <span class=\"token comment\">#小米支付</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>cmd /c adb shell pm uninstall <span class=\"token parameter variable\">--user</span> <span class=\"token number\">0</span> com.xiaomi.payment <span class=\"token comment\">#米币支付</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>cmd /c adb shell pm uninstall <span class=\"token parameter variable\">--user</span> <span class=\"token number\">0</span> com.miui.securityadd <span class=\"token comment\"># 游戏加速</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>cmd /c adb shell pm uninstall <span class=\"token parameter variable\">--user</span> <span class=\"token number\">0</span> com.miui.hybrid.accessory <span class=\"token comment\"># 智慧生活</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>cmd /c adb shell pm uninstall <span class=\"token parameter variable\">--user</span> <span class=\"token number\">0</span> com.xiaomi.macro <span class=\"token comment\">#自动连招</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>cmd /c adb shell pm uninstall <span class=\"token parameter variable\">--user</span> <span class=\"token number\">0</span> com.miui.freeform <span class=\"token comment\"># 自由窗口</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>cmd /c adb shell pm uninstall <span class=\"token parameter variable\">--user</span> <span class=\"token number\">0</span> com.miui.carlink <span class=\"token comment\">#CarWith</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>cmd /c adb shell pm uninstall <span class=\"token parameter variable\">--user</span> <span class=\"token number\">0</span> com.xiaomi.vipaccount <span class=\"token comment\">#小米社区</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>cmd /c adb shell pm uninstall <span class=\"token parameter variable\">--user</span> <span class=\"token number\">0</span> com.duokan.reader <span class=\"token comment\">#阅读</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>cmd /c adb shell pm uninstall <span class=\"token parameter variable\">--user</span> <span class=\"token number\">0</span> com.xiaomi.gamecenter <span class=\"token comment\">#游戏中心</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token comment\"># adb shell pm uninstall --user 0 com.miui.cit # CIT 手机测试</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token comment\">#adb shell pm uninstall --user 0 com.miui.contentcatcher # 应用程序扩展服务</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token comment\">#adb shell pm uninstall --user 0 com.miui.maintenancemode # 维修模式</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>cmd /c adb shell pm uninstall <span class=\"token parameter variable\">--user</span> <span class=\"token number\">0</span> com.miui.securityadd <span class=\"token comment\"># 游戏加速</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token comment\">#adb shell pm uninstall --user 0 com.miui.touchassistant # 悬浮球</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token comment\">#adb shell pm uninstall --user 0 com.miui.tsmclient # 小米智能卡</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token comment\">#adb shell pm uninstall --user 0 com.miui.phrase # 常用语</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token comment\">#adb shell pm uninstall --user 0 com.mipay.wallet # 小米钱包</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token comment\">#adb shell pm uninstall --user 0 com.xiaomi.joyose # 运动计步</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre><span class=\"token comment\">#adb shell pm uninstall --user 0 com.xiaomi.mirror # MIUI+ Beta 版</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token comment\">#adb shell pm uninstall --user 0 com.xiaomi.mircs # RCS 增强短信</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token comment\">#adb shell pm uninstall --user 0 com.xiaomi.otrpbroker # OTRP 协议协商程序（物联网）</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre><span class=\"token comment\">#adb shell pm uninstall --user 0 com.miui.micloudsync # 小米云同步</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token comment\">#adb shell pm uninstall --user 0 com.miui.cloudservice.sysbase # 小米云服务系统基础</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>pause</pre></td></tr></table></figure>",
            "tags": [
                "技术"
            ]
        },
        {
            "id": "https://hexo.iattach.top/2023/09/26/win11-%E8%93%9D%E5%B1%8F/",
            "url": "https://hexo.iattach.top/2023/09/26/win11-%E8%93%9D%E5%B1%8F/",
            "title": "win11-蓝屏",
            "date_published": "2023-09-26T17:37:48.000Z",
            "content_html": "<p>疯了，这几天开机疯狂蓝屏记录一下怎么解决</p>\n<h1 id=\"检查系统日志\"><a class=\"anchor\" href=\"#检查系统日志\">#</a> 检查系统日志</h1>\n<p>打开系统工具 - 事件查看器 - windows 日志 - 系统</p>\n<p>然后右侧筛选当前日志，事件级别选择关键、警告和错误。</p>\n<h1 id=\"10016事件\"><a class=\"anchor\" href=\"#10016事件\">#</a> 10016 事件</h1>\n<p>典型描述如下：</p>\n<pre><code>应用程序-特定 权限设置并未向在应用程序容器 不可用 SID (不可用)中运行的地址 LocalHost (使用 LRPC) 中的用户 DESKTOP-SF1U8RI\\machilus SID (S-1-5-21-1608297252-3045228917-1571507988-1001)授予针对 CLSID 为 &#123;2593F8B9-4EAF-457C-B68A-50F6B8EA6B54&#125;、APPID 为 &#123;15C20B67-12E7-4BB6-92BB-7AFF07997402&#125; 的 COM 服务器应用程序的 本地 激活 权限。此安全权限可以使用组件服务管理工具进行修改。\n</code></pre>\n<table>\n<thead>\n<tr>\n<th>CLSID</th>\n<th>APPID</th>\n<th>DCOM</th>\n<th>CLSID 权限 / APPID 权限</th>\n<th>DCOM 更改</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>2593F8B9-4EAF-457C-B68A-50F6B8EA6B54</td>\n<td>15C20B67-12E7-4BB6-92BB-7AFF07997402</td>\n<td>PerAppRuntimeBroker</td>\n<td>已更改 / 已更改</td>\n<td>已更改</td>\n</tr>\n<tr>\n<td>7022A3B3-D004-4F52-AF11-E9E987FEE25F</td>\n<td>ADA41B3C-C6FD-4A08-8CC1-D6EFDE67BE7D</td>\n<td>WPN SRUM COM Server</td>\n<td>已更改 / 已更改</td>\n<td>已更改</td>\n</tr>\n<tr>\n<td>6B3B8D23-FA8D-40B9-8DBD-B950333E2C52</td>\n<td>4839DDB7-58C2-48F5-8283-E1D1807D0D7D</td>\n<td>ShellServiceHost</td>\n<td>已更改 / 已更改</td>\n<td>已更改</td>\n</tr>\n<tr>\n<td>21B896BF-008D-4D01-A27B-26061B960DD7</td>\n<td>03E09F3B-DCE4-44FE-A9CF-82D050827E1C</td>\n<td>无</td>\n<td>已更改 / 已更改</td>\n<td>已更改</td>\n</tr>\n<tr>\n<td>8CFC164F-4BE5-4FDD-94E9-E2AF73ED4A19</td>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"windowssecuritycentersecurityappbroker\"><a class=\"anchor\" href=\"#windowssecuritycentersecurityappbroker\">#</a> Windows.SecurityCenter.SecurityAppBroker</h1>\n<pre><code>1. Open Registry Editor. To do that:\n\n1. Simultaneously press the Win image + R keys to open the run command box.\n2. Type regedit and press Enter to open Registry Editor.\n\nregedit\n2. In Registry, navigate to the following location:\n\nHKEY_LOCAL_MACHINE\\SYSTEM\\CurrentControlSet\\Services\\wscsvc\n3. At the right pane open the DelayedAutoStart REG_DWORD value.\n\nDisable DelayedAutoStart\n\n4. Change the value data from 1 to 0 and click OK.\n</code></pre>\n<h1 id=\"错误\"><a class=\"anchor\" href=\"#错误\">#</a> 错误</h1>\n<p>服务器 {8CFC164F-4BE5-4FDD-94E9-E2AF73ED4A19} 没有在要求的超时时间内向 DCOM 注册。</p>\n<p>未找到解决办法，组策略关闭失败，跟 webexperience 小组件有关。</p>\n",
            "tags": [
                "技术"
            ]
        },
        {
            "id": "https://hexo.iattach.top/2023/08/27/Windows-11%E5%B0%9D%E8%AF%95%E5%AE%89%E8%A3%85%E9%BB%91%E8%8B%B9%E6%9E%9C/",
            "url": "https://hexo.iattach.top/2023/08/27/Windows-11%E5%B0%9D%E8%AF%95%E5%AE%89%E8%A3%85%E9%BB%91%E8%8B%B9%E6%9E%9C/",
            "title": "Windows 11尝试安装黑苹果",
            "date_published": "2023-08-27T18:22:11.000Z",
            "content_html": "<p>因为没有第二台 ios 就尝试黑苹果定期登录一下苹果小号吧。</p>\n<h1 id=\"vmware安装\"><a class=\"anchor\" href=\"#vmware安装\">#</a> VMWare 安装</h1>\n<p>版本选择 VMWare 16 pro，因为官网下载需要登录账号，建议搜索下官网下载直链。直接安装的版本没有 macos 选项，需要搜索 unlocker vmware 找到 github 的 depot，但貌似项目已经存档了。。。。但还是可以用的。</p>\n<h1 id=\"macos安装\"><a class=\"anchor\" href=\"#macos安装\">#</a> Macos 安装</h1>\n<p>第一次建立好文件后打开系统直接蓝屏，因为 amd 的 cpu？？搜了一下发现要加参数，在自动建立的 vmware 镜像文件中找到 vmx 后缀的文件并在尾部添加以下参数：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>smc.version <span class=\"token operator\">=</span> <span class=\"token string\">\"0\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>cpuid.0.eax <span class=\"token operator\">=</span> <span class=\"token string\">\"0000:0000:0000:0000:0000:0000:0000:1011\"</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>cpuid.0.ebx <span class=\"token operator\">=</span> <span class=\"token string\">\"0111:0101:0110:1110:0110:0101:0100:0111\"</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>cpuid.0.ecx <span class=\"token operator\">=</span> <span class=\"token string\">\"0110:1100:0110:0101:0111:0100:0110:1110\"</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>cpuid.0.edx <span class=\"token operator\">=</span> <span class=\"token string\">\"0100:1001:0110:0101:0110:1110:0110:1001\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>cpuid.1.eax <span class=\"token operator\">=</span> <span class=\"token string\">\"0000:0000:0000:0001:0000:0110:0111:0001\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>cpuid.1.ebx <span class=\"token operator\">=</span> <span class=\"token string\">\"0000:0010:0000:0001:0000:1000:0000:0000\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>cpuid.1.ecx <span class=\"token operator\">=</span> <span class=\"token string\">\"1000:0010:1001:1000:0010:0010:0000:0011\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>cpuid.1.edx <span class=\"token operator\">=</span> <span class=\"token string\">\"0000:0111:1000:1011:1111:1011:1111:1111\"</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>smbios.reflectHost <span class=\"token operator\">=</span> <span class=\"token string\">\"TRUE\"</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>hw.model <span class=\"token operator\">=</span> <span class=\"token string\">\"MacBookPro14,3\"</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>board-id <span class=\"token operator\">=</span> <span class=\"token string\">\"Mac-551B86E5744E2388\"</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>keyboard.vusb.enable <span class=\"token operator\">=</span> <span class=\"token string\">\"TRUE\"</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>mouse.vusb.enable <span class=\"token operator\">=</span> <span class=\"token string\">\"TRUE\"</span></pre></td></tr></table></figure><p>第二次蓝屏。。。。。<br />\n搜索 vmware amd 蓝屏解决得到以下方案，在 windows11 的控制面板中找到启用或关闭 windows 功能，打勾<strong>适用于 Linux 的 Windows 子系统</strong>和<strong>虚拟机平台</strong>两个选项。</p>\n<p>这次倒是不蓝屏了，但是显示<strong>未能启动虚拟机</strong>，找寻所有方式无果，于是换了最新的 vmware 版本 17pro 和 macos monterey 镜像，加了上面的代码后结果就可以了！！！！！</p>\n<p>WTFFFFFFFFFF</p>\n<h1 id=\"macos安装-2\"><a class=\"anchor\" href=\"#macos安装-2\">#</a> macos 安装</h1>\n<p>先进入<strong>磁盘工具</strong>把未格式化的磁盘<strong>抹掉</strong>，然后返回主界面安装 os</p>\n",
            "tags": [
                "技术"
            ]
        },
        {
            "id": "https://hexo.iattach.top/2023/04/03/ASF%E7%BD%91%E7%AB%99-centos%E6%9B%B4%E6%96%B0%E9%87%8D%E6%96%B0%E5%BB%BA%E7%AB%8B%E8%BF%9E%E6%8E%A5/",
            "url": "https://hexo.iattach.top/2023/04/03/ASF%E7%BD%91%E7%AB%99-centos%E6%9B%B4%E6%96%B0%E9%87%8D%E6%96%B0%E5%BB%BA%E7%AB%8B%E8%BF%9E%E6%8E%A5/",
            "title": "ASF网站 centos更新重新建立连接",
            "date_published": "2023-04-03T18:51:20.000Z",
            "content_html": "<h1 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h1>\n<p>之前收到邮件关于 steam 要求登陆验证码，忽略之后发现 asf 网站登陆不上去显示 nginx error!，回忆不起来之前的操作了，这里是日志记录。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">1</span>  yum <span class=\"token parameter variable\">-y</span> <span class=\"token function\">install</span> <span class=\"token function\">wget</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token number\">2</span>  <span class=\"token function\">sudo</span> yum <span class=\"token parameter variable\">-y</span> <span class=\"token function\">install</span> <span class=\"token function\">wget</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token number\">3</span>  yum update <span class=\"token parameter variable\">-y</span> <span class=\"token operator\">&amp;&amp;</span> yum <span class=\"token function\">install</span> <span class=\"token function\">curl</span> <span class=\"token parameter variable\">-y</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token number\">4</span>  <span class=\"token function\">sudo</span> yum update <span class=\"token parameter variable\">-y</span> <span class=\"token operator\">&amp;&amp;</span> yum <span class=\"token function\">install</span> <span class=\"token function\">curl</span> <span class=\"token parameter variable\">-y</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token number\">5</span>  quit</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token number\">6</span>  <span class=\"token builtin class-name\">exit</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token number\">7</span>  firewall-cmd <span class=\"token parameter variable\">--permanent</span> --query-port<span class=\"token operator\">=</span><span class=\"token number\">10086</span>/tcp</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token number\">8</span>  firewall-cmd <span class=\"token parameter variable\">--permanent</span> --query-port<span class=\"token operator\">=</span><span class=\"token number\">22</span>/tcp</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token number\">9</span>  <span class=\"token function\">sudo</span> firewall-cmd <span class=\"token parameter variable\">--permanent</span> --query-port<span class=\"token operator\">=</span><span class=\"token number\">22</span>/tcp</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>   <span class=\"token number\">10</span>  whoisa</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>   <span class=\"token number\">11</span>  whois</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>   <span class=\"token number\">12</span>  whoia</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>   <span class=\"token number\">13</span>  <span class=\"token function\">cat</span> /etc/redhat-release</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>   <span class=\"token number\">14</span>  lsb_release <span class=\"token parameter variable\">-a</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>   <span class=\"token number\">15</span>  <span class=\"token function\">uname</span> <span class=\"token parameter variable\">-a</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>   <span class=\"token number\">16</span>  <span class=\"token function\">sudo</span> <span class=\"token parameter variable\">-i</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>   <span class=\"token number\">17</span>  histroy</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>   <span class=\"token number\">18</span>  <span class=\"token function\">history</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>   <span class=\"token number\">19</span>  <span class=\"token function\">bash</span> <span class=\"token operator\">&lt;</span><span class=\"token punctuation\">(</span><span class=\"token function\">curl</span> <span class=\"token parameter variable\">-sL</span> https://raw.githubusercontent.com/hijkpw/scripts/master/entos_install_v2ray.sh<span class=\"token punctuation\">)</span> info</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>   <span class=\"token number\">20</span>  systemctl start v2ray</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>   <span class=\"token number\">21</span>  root</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>   <span class=\"token number\">22</span>  <span class=\"token function\">sudo</span> systemctl start v2ray</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>   <span class=\"token number\">23</span>  <span class=\"token function\">bash</span> <span class=\"token operator\">&lt;</span><span class=\"token punctuation\">(</span><span class=\"token function\">curl</span> <span class=\"token parameter variable\">-sL</span> https://raw.githubusercontent.com/hijkpw/scripts/master/entos_install_v2ray.sh<span class=\"token punctuation\">)</span> info</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>   <span class=\"token number\">24</span>  <span class=\"token function\">sudo</span> systemctl restart v2ray</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>   <span class=\"token number\">25</span>  <span class=\"token function\">bash</span> <span class=\"token operator\">&lt;</span><span class=\"token punctuation\">(</span><span class=\"token function\">curl</span> <span class=\"token parameter variable\">-sL</span> https://raw.githubusercontent.com/hijkpw/scripts/master/entos_install_v2ray.sh<span class=\"token punctuation\">)</span> info</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>   <span class=\"token number\">26</span>  <span class=\"token function\">sudo</span> systemctl status v2ray <span class=\"token parameter variable\">-l</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>   <span class=\"token number\">27</span>  <span class=\"token function\">df</span> <span class=\"token parameter variable\">-hl</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>   <span class=\"token number\">28</span>  <span class=\"token function\">top</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>   <span class=\"token number\">29</span>  <span class=\"token function\">sudo</span> <span class=\"token parameter variable\">-l</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>   <span class=\"token number\">30</span>  suo</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>   <span class=\"token number\">31</span>  <span class=\"token function\">sudo</span> nerstat <span class=\"token parameter variable\">-tulpn</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> :80</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>   <span class=\"token number\">32</span>  <span class=\"token function\">sudo</span> <span class=\"token function\">netstat</span> <span class=\"token parameter variable\">-tulpn</span> <span class=\"token operator\">|</span> <span class=\"token function\">grep</span> :80</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>   <span class=\"token number\">33</span>  <span class=\"token function\">sudo</span> systemctl status nginx</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>   <span class=\"token number\">34</span>  <span class=\"token function\">sudo</span> firewall-cmd <span class=\"token parameter variable\">--premanent</span> <span class=\"token parameter variable\">--zone</span><span class=\"token operator\">=</span>public --add-service<span class=\"token operator\">=</span>http</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>   <span class=\"token number\">35</span>  <span class=\"token function\">sudo</span> firewall-cmd <span class=\"token parameter variable\">--permanent</span> <span class=\"token parameter variable\">--zone</span><span class=\"token operator\">=</span>public --add-service<span class=\"token operator\">=</span>http</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>   <span class=\"token number\">36</span>  <span class=\"token function\">vi</span> /etc/nginx/conf.d</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>   <span class=\"token number\">37</span>  <span class=\"token function\">vim</span> /etc/nginx/conf.d</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>   <span class=\"token number\">38</span>  yum <span class=\"token parameter variable\">-y</span> <span class=\"token function\">install</span> <span class=\"token function\">nano</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>   <span class=\"token number\">39</span>  <span class=\"token function\">sudo</span> yum <span class=\"token parameter variable\">-y</span> <span class=\"token function\">install</span> <span class=\"token function\">nano</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>   <span class=\"token number\">40</span>  <span class=\"token function\">nano</span> /etc/nginx/conf.d</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>   <span class=\"token number\">41</span>  <span class=\"token function\">ls</span> /etc/nginx</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>   <span class=\"token number\">42</span>  nginx <span class=\"token parameter variable\">-t</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>   <span class=\"token number\">43</span>  <span class=\"token function\">sudo</span> nginx <span class=\"token parameter variable\">-t</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>   <span class=\"token number\">44</span>  <span class=\"token function\">nano</span> /etc/nginx/nginx.conf</pre></td></tr><tr><td data-num=\"45\"></td><td><pre>   <span class=\"token number\">45</span>  <span class=\"token function\">sudo</span> <span class=\"token function\">nano</span> /etc/nginx/nginx.conf</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>   <span class=\"token number\">46</span>  <span class=\"token function\">cat</span> /etc/nginx/nginx.conf</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>   <span class=\"token number\">47</span>  <span class=\"token function\">sudo</span> <span class=\"token function\">nano</span> /etc/nginx/nginx.conf</pre></td></tr><tr><td data-num=\"48\"></td><td><pre>   <span class=\"token number\">48</span>  <span class=\"token function\">sudo</span> systemctl restart nginx.service</pre></td></tr><tr><td data-num=\"49\"></td><td><pre>   <span class=\"token number\">49</span>  <span class=\"token function\">sudo</span> systemctl status nginx.service</pre></td></tr><tr><td data-num=\"50\"></td><td><pre>   <span class=\"token number\">50</span>  <span class=\"token function\">sudo</span> systemctl stop nginx.service</pre></td></tr><tr><td data-num=\"51\"></td><td><pre>   <span class=\"token number\">51</span>  <span class=\"token function\">sudo</span> systemctl status nginx.service</pre></td></tr><tr><td data-num=\"52\"></td><td><pre>   <span class=\"token number\">52</span>  <span class=\"token function\">sudo</span> systemctl start nginx.service</pre></td></tr><tr><td data-num=\"53\"></td><td><pre>   <span class=\"token number\">53</span>  <span class=\"token function\">sudo</span> systemctl status nginx.service</pre></td></tr><tr><td data-num=\"54\"></td><td><pre>   <span class=\"token number\">54</span>  <span class=\"token function\">sudo</span> <span class=\"token function\">nano</span> /etc/nginx/nginx.conf</pre></td></tr><tr><td data-num=\"55\"></td><td><pre>   <span class=\"token number\">55</span>  <span class=\"token function\">sudo</span> systemctl restart nginx.service</pre></td></tr><tr><td data-num=\"56\"></td><td><pre>   <span class=\"token number\">56</span>  ipconfig</pre></td></tr><tr><td data-num=\"57\"></td><td><pre>   <span class=\"token number\">57</span>  <span class=\"token function\">ifconfig</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>   <span class=\"token number\">58</span>  <span class=\"token function\">sudo</span> nginx <span class=\"token parameter variable\">-t</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>   <span class=\"token number\">59</span>  <span class=\"token function\">sudo</span> <span class=\"token function\">nano</span> /etc/nginx/nginx.conf</pre></td></tr><tr><td data-num=\"60\"></td><td><pre>   <span class=\"token number\">60</span>  <span class=\"token function\">sudo</span> nginx <span class=\"token parameter variable\">-t</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>   <span class=\"token number\">61</span>  <span class=\"token function\">sudo</span> <span class=\"token function\">nano</span> /etc/nginx/nginx.conf</pre></td></tr><tr><td data-num=\"62\"></td><td><pre>   <span class=\"token number\">62</span>  <span class=\"token function\">sudo</span> nginx <span class=\"token parameter variable\">-t</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>   <span class=\"token number\">63</span>  <span class=\"token function\">sudo</span> <span class=\"token function\">nano</span> /etc/nginx/nginx.conf</pre></td></tr><tr><td data-num=\"64\"></td><td><pre>   <span class=\"token number\">64</span>  <span class=\"token function\">sudo</span> nginx <span class=\"token parameter variable\">-t</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>   <span class=\"token number\">65</span>  <span class=\"token function\">sudo</span> systemctl restart nginx.service</pre></td></tr><tr><td data-num=\"66\"></td><td><pre>   <span class=\"token number\">66</span>  <span class=\"token function\">sudo</span> <span class=\"token function\">nano</span> /etc/nginx/nginx.conf</pre></td></tr><tr><td data-num=\"67\"></td><td><pre>   <span class=\"token number\">67</span>  <span class=\"token function\">sudo</span> nginx <span class=\"token parameter variable\">-t</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>   <span class=\"token number\">68</span>  <span class=\"token function\">sudo</span> systemctl restart nginx.service</pre></td></tr><tr><td data-num=\"69\"></td><td><pre>   <span class=\"token number\">69</span>  <span class=\"token function\">ls</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>   <span class=\"token number\">70</span>  <span class=\"token builtin class-name\">cd</span> /etc</pre></td></tr><tr><td data-num=\"71\"></td><td><pre>   <span class=\"token number\">71</span>  <span class=\"token builtin class-name\">cd</span> nginx/</pre></td></tr><tr><td data-num=\"72\"></td><td><pre>   <span class=\"token number\">72</span>  <span class=\"token function\">ls</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>   <span class=\"token number\">73</span>  <span class=\"token builtin class-name\">cd</span> conf.d/</pre></td></tr><tr><td data-num=\"74\"></td><td><pre>   <span class=\"token number\">74</span>  <span class=\"token function\">ls</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>   <span class=\"token number\">75</span>  <span class=\"token builtin class-name\">cd</span> <span class=\"token punctuation\">..</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>   <span class=\"token number\">76</span>  <span class=\"token function\">sudo</span> systemctl restart nginx.service</pre></td></tr><tr><td data-num=\"77\"></td><td><pre>   <span class=\"token number\">77</span>  <span class=\"token function\">sudo</span> <span class=\"token function\">nano</span> /etc/nginx/nginx.conf</pre></td></tr><tr><td data-num=\"78\"></td><td><pre>   <span class=\"token number\">78</span>  <span class=\"token function\">service</span>   iptables stop</pre></td></tr><tr><td data-num=\"79\"></td><td><pre>   <span class=\"token number\">79</span>  <span class=\"token function\">sudo</span> <span class=\"token parameter variable\">-i</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>   <span class=\"token number\">80</span>  <span class=\"token function\">df</span> <span class=\"token parameter variable\">-hl</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>   <span class=\"token number\">81</span>  yum <span class=\"token function\">install</span> libunwind8 libunwind8-dev gettext libicu-dev liblttng-ust-de libcurl4-openssl-dev libssl-dev uuid-dev <span class=\"token function\">unzip</span> <span class=\"token function\">screen</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>   <span class=\"token number\">82</span>  <span class=\"token function\">sudo</span> yum <span class=\"token function\">install</span> libunwind8 libunwind8-dev gettext libicu-dev liblttng-ut-dev libcurl4-openssl-dev libssl-dev uuid-dev <span class=\"token function\">unzip</span> <span class=\"token function\">screen</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>   <span class=\"token number\">83</span>  yum <span class=\"token parameter variable\">-y</span> <span class=\"token function\">install</span> dotnet-sdk-2.1</pre></td></tr><tr><td data-num=\"84\"></td><td><pre>   <span class=\"token number\">84</span>  <span class=\"token function\">sudo</span> yum <span class=\"token parameter variable\">-y</span> <span class=\"token function\">install</span> dotnet-sdk-2.1</pre></td></tr><tr><td data-num=\"85\"></td><td><pre>   <span class=\"token number\">85</span>  <span class=\"token function\">sudo</span> dnf <span class=\"token function\">install</span> python3-librepo</pre></td></tr><tr><td data-num=\"86\"></td><td><pre>   <span class=\"token number\">86</span>  <span class=\"token function\">sudo</span> yum <span class=\"token parameter variable\">-y</span> <span class=\"token function\">install</span> dotnet-sdk-2.1</pre></td></tr><tr><td data-num=\"87\"></td><td><pre>   <span class=\"token number\">87</span>  yum <span class=\"token function\">install</span> librepo <span class=\"token parameter variable\">-y</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>   <span class=\"token number\">88</span>  <span class=\"token function\">sudo</span> yum <span class=\"token function\">install</span> librepo <span class=\"token parameter variable\">-y</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>   <span class=\"token number\">89</span>  <span class=\"token builtin class-name\">cd</span> /etc/yum.repos.d/</pre></td></tr><tr><td data-num=\"90\"></td><td><pre>   <span class=\"token number\">90</span>  <span class=\"token function\">sed</span> <span class=\"token parameter variable\">-i</span> <span class=\"token string\">'s/mirrorlist/#mirrorlist/g'</span> /etc/yum.repos.d/CentOS-*</pre></td></tr><tr><td data-num=\"91\"></td><td><pre>   <span class=\"token number\">91</span>  <span class=\"token function\">sudo</span> <span class=\"token function\">sed</span> <span class=\"token parameter variable\">-i</span> <span class=\"token string\">'s/mirrorlist/#mirrorlist/g'</span> /etc/yum.repos.d/CentOS-*</pre></td></tr><tr><td data-num=\"92\"></td><td><pre>   <span class=\"token number\">92</span>  <span class=\"token function\">sed</span> <span class=\"token parameter variable\">-i</span> <span class=\"token string\">'s|#baseurl=http://mirror.centos.org|baseurl=http://vault.centos.rg|g'</span> /etc/yum.repos.d/CentOS-*</pre></td></tr><tr><td data-num=\"93\"></td><td><pre>   <span class=\"token number\">93</span>  <span class=\"token function\">sudo</span> <span class=\"token function\">sed</span> <span class=\"token parameter variable\">-i</span> <span class=\"token string\">'s|#baseurl=http://mirror.centos.org|baseurl=http://vault.cetos.org|g'</span> /etc/yum.repos.d/CentOS-*</pre></td></tr><tr><td data-num=\"94\"></td><td><pre>   <span class=\"token number\">94</span>  <span class=\"token builtin class-name\">cd</span> ~</pre></td></tr><tr><td data-num=\"95\"></td><td><pre>   <span class=\"token number\">95</span>  yum update <span class=\"token parameter variable\">-y</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>   <span class=\"token number\">96</span>  <span class=\"token function\">sudo</span> yum update <span class=\"token parameter variable\">-y</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>   <span class=\"token number\">97</span>  yum <span class=\"token function\">install</span> libunwind8 libunwind8-dev gettext libicu-dev liblttng-ust-de libcurl4-openssl-dev libssl-dev uuid-dev <span class=\"token function\">unzip</span> <span class=\"token function\">screen</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>   <span class=\"token number\">98</span>  <span class=\"token function\">sudo</span> yum <span class=\"token function\">install</span> libunwind8 libunwind8-dev gettext libicu-dev liblttng-ut-dev libcurl4-openssl-dev libssl-dev uuid-dev <span class=\"token function\">unzip</span> <span class=\"token function\">screen</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>   <span class=\"token number\">99</span>  <span class=\"token function\">sudo</span> yum <span class=\"token parameter variable\">-y</span> <span class=\"token function\">install</span> dotnet-sdk-2.1</pre></td></tr><tr><td data-num=\"100\"></td><td><pre>  <span class=\"token number\">100</span>  <span class=\"token function\">sudo</span> <span class=\"token function\">su</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>  <span class=\"token number\">101</span>  <span class=\"token function\">screen</span> <span class=\"token parameter variable\">-r</span> asf</pre></td></tr><tr><td data-num=\"102\"></td><td><pre>  <span class=\"token number\">102</span>  <span class=\"token function\">sudo</span> <span class=\"token function\">su</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>  <span class=\"token number\">103</span>  <span class=\"token function\">top</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>  <span class=\"token number\">104</span>  <span class=\"token function\">screen</span> <span class=\"token parameter variable\">-h</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>  <span class=\"token number\">105</span>  <span class=\"token function\">screen</span> <span class=\"token parameter variable\">-l</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>  <span class=\"token number\">106</span>  <span class=\"token function\">screen</span> <span class=\"token parameter variable\">-h</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>  <span class=\"token number\">107</span>  <span class=\"token function\">screen</span> <span class=\"token parameter variable\">-r</span> asf</pre></td></tr><tr><td data-num=\"108\"></td><td><pre>  <span class=\"token number\">108</span>  historu</pre></td></tr><tr><td data-num=\"109\"></td><td><pre>  <span class=\"token number\">109</span>  <span class=\"token function\">history</span></pre></td></tr></table></figure><h1 id=\"centos实例建立连接\"><a class=\"anchor\" href=\"#centos实例建立连接\">#</a> centos 实例建立连接</h1>\n<p>连接以 ssh 的方式，私钥为结尾文件格式 ppk，oracle 生成的秘钥。登陆名为 opc</p>\n<h1 id=\"asf恢复\"><a class=\"anchor\" href=\"#asf恢复\">#</a> asf 恢复</h1>\n<p>查了一下之前是 screen 命令挂系统后台 <code>screen -l</code> ，然后没有的话，建立新的 screen <code>screen -S asf</code> 。之后到 asf 的文件夹下运行 <code>./ArchiSteamFarm</code>  成功重启 asf。之前的 steam 邮件是因为 asf 重启需要账户的验证码，因为长时间没有收到，导致程序无法继续运行，从而导致终端挂死。</p>\n<p>如果需要后台运行，先 screen 建立新的 session，然后运行 <code>nohup sudo ./ArchiSteamFarm &gt;/dev/null 2&gt;&amp;1 &amp;</code> ，之后就可以 ctrl + a + d 切换了，也就可以断掉 putty 的连接 session。</p>\n<h1 id=\"备份\"><a class=\"anchor\" href=\"#备份\">#</a> 备份</h1>\n<p>nginx.conf 备份</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># For more information on configuration, see:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#   * Official English Documentation: http://nginx.org/en/docs/</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">#   * Official Russian Documentation: http://nginx.org/ru/docs/</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>user nginx<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>worker_processes auto<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>error_log /var/log/nginx/error.log<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>pid /run/nginx.pid<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\"># Load dynamic modules. See /usr/share/doc/nginx/README.dynamic.</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">#include /usr/share/nginx/modules/*.conf;</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>events <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    worker_connections <span class=\"token number\">1024</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>http <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    log_format  main  <span class=\"token string\">'$remote_addr - $remote_user [$time_local] \"$request\" '</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>                      <span class=\"token string\">'$status $body_bytes_sent \"$http_referer\" '</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>                      <span class=\"token string\">'\"$http_user_agent\" \"$http_x_forwarded_for\"'</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    access_log  /var/log/nginx/access.log  main<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    sendfile            on<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    tcp_nopush          on<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    tcp_nodelay         on<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    keepalive_timeout   <span class=\"token number\">65</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    types_hash_max_size <span class=\"token number\">2048</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    include             /etc/nginx/mime.types<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    default_type        application/octet-stream<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token comment\"># Load modular configuration files from the /etc/nginx/conf.d directory.</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token comment\"># See http://nginx.org/en/docs/ngx_core_module.html#include</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token comment\"># for more information.</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token comment\">#include /etc/nginx/conf.d/*.conf;</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>     <span class=\"token comment\">#server&#123;</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre> <span class=\"token comment\">#      listen  80;</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>         <span class=\"token comment\">#server_name iattach.top www.iattach.top;</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>         <span class=\"token comment\">#return 301 https://$server_name$request_uri;</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>     <span class=\"token comment\">#&#125;</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    server <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>         <span class=\"token comment\">#listen       443;</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        listen *:443 ssl<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>          listen *:80<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        server_name  iattach.top www.iattach.top<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        <span class=\"token comment\">#ssl on;</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        <span class=\"token comment\">#ssl_certificate ssl/iattach.top_bundle.pem;</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token comment\">#ssl_certificate_key ssl/iattach.top.key;</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        <span class=\"token comment\">#ssl_session_timeout 5m;</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        <span class=\"token comment\">#ssl_protocols TLSv1 TLSv1.1 TLSv1.2;</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token comment\">#ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:HIGH:!aNULL:!MD5:!RC4:!DHE;</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        <span class=\"token comment\">#ssl_prefer_server_ciphers on;</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    ssl_certificate ssl/iattach.top_bundle.crt<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    ssl_certificate_key ssl/iattach.top.key<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>        ssl_protocols TLSv1 TLSv1.1 TLSv1.2 TLSv1.3<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>       ssl_ciphers TLS13-AES-256-GCM-SHA384:TLS13-CHACHA20-POLY1305-SHA256:TLS13                                       -AES-128-GCM-SHA256:TLS13-AES-128-CCM-8-SHA256:TLS13-AES-128-CCM-SHA256:EECDH+CH                                       ACHA20:EECDH+AES128:RSA+AES128:EECDH+AES256:RSA+AES256:EECDH+3DES:RSA+3DES:<span class=\"token operator\">!</span>MD5<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>       ssl_prefer_server_ciphers on<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>       ssl_session_timeout 10m<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>       ssl_session_cache builtin:1000 shared:SSL:10m<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>       ssl_buffer_size <span class=\"token number\">1400</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>       add_header Strict-Transport-Security max-age<span class=\"token operator\">=</span><span class=\"token number\">15768000</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>       ssl_stapling on<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>       ssl_stapling_verify on<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>       <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token variable\">$ssl_protocol</span> <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span> <span class=\"token builtin class-name\">return</span> <span class=\"token number\">301</span> https://<span class=\"token variable\">$host</span><span class=\"token variable\">$request_uri</span><span class=\"token punctuation\">;</span> <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>        <span class=\"token comment\">#location / &#123;</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>        <span class=\"token comment\">#       root /usr/share/nginx/html;</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>        <span class=\"token comment\">#       index index.html index.htm;</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>        <span class=\"token comment\">#&#125;</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>        <span class=\"token comment\">#location ~ /pcr/(.*)$ &#123;</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>        <span class=\"token comment\">#       return 301 http://101.35.102.32:80/$1;</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>        <span class=\"token comment\">#&#125;</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>        location ~* /Api/NLog <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>                proxy_pass http://127.0.0.1:1242<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>        <span class=\"token comment\">#       proxy_set_header Host 127.0.0.1; # Only if you need to override                                        default host</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>                proxy_set_header X-Forwarded-For <span class=\"token variable\">$proxy_add_x_forwarded_for</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>                proxy_set_header X-Forwarded-Host <span class=\"token variable\">$host</span><span class=\"token builtin class-name\">:</span><span class=\"token variable\">$server_port</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>                proxy_set_header X-Forwarded-Proto <span class=\"token variable\">$scheme</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>                proxy_set_header X-Forwarded-Server <span class=\"token variable\">$host</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>                proxy_set_header X-Real-IP <span class=\"token variable\">$remote_addr</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>                <span class=\"token comment\"># We add those 3 extra options for websockets proxying, see http                                       s://nginx.org/en/docs/http/websocket.html</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>                proxy_http_version <span class=\"token number\">1.1</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>                proxy_set_header Connection <span class=\"token string\">\"Upgrade\"</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>                proxy_set_header Upgrade <span class=\"token variable\">$http_upgrade</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>       location / <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>             proxy_pass http://127.0.0.1:1242<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>        <span class=\"token comment\">#        proxy_set_header Host 127.0.0.1; # Only if you need to override                                        default host</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>                proxy_set_header X-Forwarded-For <span class=\"token variable\">$proxy_add_x_forwarded_for</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>               proxy_set_header X-Forwarded-Host <span class=\"token variable\">$host</span><span class=\"token builtin class-name\">:</span><span class=\"token variable\">$server_port</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>                proxy_set_header X-Forwarded-Proto <span class=\"token variable\">$scheme</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre>                proxy_set_header X-Forwarded-Server <span class=\"token variable\">$host</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>                proxy_set_header X-Real-IP <span class=\"token variable\">$remote_addr</span><span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>        error_page <span class=\"token number\">404</span> /404.html<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>            location <span class=\"token operator\">=</span> /40x.html <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>        error_page <span class=\"token number\">500</span> <span class=\"token number\">502</span> <span class=\"token number\">503</span> <span class=\"token number\">504</span> /50x.html<span class=\"token punctuation\">;</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>            location <span class=\"token operator\">=</span> /50x.html <span class=\"token punctuation\">&#123;</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>        <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"109\"></td><td><pre>    <span class=\"token punctuation\">&#125;</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre></pre></td></tr><tr><td data-num=\"111\"></td><td><pre><span class=\"token comment\"># Settings for a TLS enabled server.</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre><span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre><span class=\"token comment\">#    server &#123;</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre><span class=\"token comment\">#        listen       443 ssl http2 default_server;</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre><span class=\"token comment\">#        listen       [::]:443 ssl http2 default_server;</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre><span class=\"token comment\">#        server_name  _;</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre><span class=\"token comment\">#        root         /usr/share/nginx/html;</span></pre></td></tr><tr><td data-num=\"118\"></td><td><pre><span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre><span class=\"token comment\">#        ssl_certificate \"/etc/pki/nginx/server.crt\";</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre><span class=\"token comment\">#        ssl_certificate_key \"/etc/pki/nginx/private/server.key\";</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre><span class=\"token comment\">#        ssl_session_cache shared:SSL:1m;</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre><span class=\"token comment\">#        ssl_session_timeout  10m;</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre><span class=\"token comment\">#        ssl_ciphers PROFILE=SYSTEM;</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre><span class=\"token comment\">#        ssl_prefer_server_ciphers on;</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre><span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre><span class=\"token comment\">#        # Load configuration files for the default server block.</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre><span class=\"token comment\">#        include /etc/nginx/default.d/*.conf;</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre><span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre><span class=\"token comment\">#        location / &#123;</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre><span class=\"token comment\">#        &#125;</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre><span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre><span class=\"token comment\">#        error_page 404 /404.html;</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre><span class=\"token comment\">#            location = /40x.html &#123;</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre><span class=\"token comment\">#        &#125;</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre><span class=\"token comment\">#</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre><span class=\"token comment\">#        error_page 500 502 503 504 /50x.html;</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre><span class=\"token comment\">#            location = /50x.html &#123;</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre><span class=\"token comment\">#        &#125;</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre><span class=\"token comment\">#    &#125;</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre></pre></td></tr><tr><td data-num=\"141\"></td><td><pre><span class=\"token punctuation\">&#125;</span></pre></td></tr></table></figure>",
            "tags": [
                "技术",
                "asf"
            ]
        },
        {
            "id": "https://hexo.iattach.top/2022/07/16/windows11-%E7%B3%BB%E7%BB%9F%E5%B8%B8%E7%94%A8%E8%AE%BE%E7%BD%AE/",
            "url": "https://hexo.iattach.top/2022/07/16/windows11-%E7%B3%BB%E7%BB%9F%E5%B8%B8%E7%94%A8%E8%AE%BE%E7%BD%AE/",
            "title": "windows11 系统常用设置",
            "date_published": "2022-07-16T04:59:50.000Z",
            "content_html": "<h1 id=\"右键菜单\"><a class=\"anchor\" href=\"#右键菜单\">#</a> 右键菜单</h1>\n<p>右键菜单有半秒延迟打开缓慢，参考<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC80MjcyNjgxMzU=\"> https://zhuanlan.zhihu.com/p/427268135</span></p>\n<h2 id=\"使用注册表修改\"><a class=\"anchor\" href=\"#使用注册表修改\">#</a> 使用注册表修改</h2>\n<p>首先，通过修改注册表，我们就可以将 Win11 的右键菜单改为老样式。下面是具体的方法。</p>\n<p>运行 “regedit”，开启注册表编辑器，定位到 “HKEY_CURRENT_USER\\SOFTWARE\\CLASSES\\CLSID”；</p>\n<p>接着，右键点击 “CLSID” 键值，新建一个名为 {86ca1aa0-34aa-4e8b-a509-50c905bae2a2} 的项；</p>\n<p>右键点击新创建的项，新建一个名为 InprocServer32 的项，按下回车键保存；</p>\n<p>最后选择新创建的项，然后双击右侧窗格中的默认条目，什么内容都不需要输入，按下回车键。</p>\n<p>保存注册表后，重启 explorer.exe，即可看到右键菜单恢复成旧样式了。</p>\n<p>如果想要恢复成为 Win11 的设计，那么删掉 InprocServer32 的项就可以了。</p>\n<h1 id=\"换电脑步骤\"><a class=\"anchor\" href=\"#换电脑步骤\">#</a> 换电脑步骤</h1>\n<h2 id=\"旧电脑\"><a class=\"anchor\" href=\"#旧电脑\">#</a> 旧电脑</h2>\n<ul>\n<li>listray 导出</li>\n<li>onenote 导出</li>\n</ul>\n<h2 id=\"新电脑\"><a class=\"anchor\" href=\"#新电脑\">#</a> 新电脑</h2>\n<ul>\n<li>装 chrome</li>\n<li>装驱动 *</li>\n<li>激活 win11 pro</li>\n<li>移动所有 windows 个人文件夹</li>\n<li>listary 导入</li>\n<li>登录 google 账户</li>\n<li>potplayer</li>\n<li>更改屏幕分辨率</li>\n<li>win11 任务栏文件夹位置 C:\\Users\\machilus\\AppData\\Roaming\\Microsoft\\Internet Explorer\\Quick Launch\\User Pinned\\TaskBar</li>\n<li>安装 office</li>\n<li>添加邮件 mail</li>\n<li>截屏使用多窗口</li>\n<li>执行右键菜单 exe</li>\n</ul>\n<h3 id=\"技术栈安装\"><a class=\"anchor\" href=\"#技术栈安装\">#</a> 技术栈安装</h3>\n<ul>\n<li>git</li>\n<li>vscode</li>\n<li>nodejs</li>\n<li>ssh 生成秘钥，github 添加 pub 秘钥</li>\n</ul>\n<h3 id=\"代码执行\"><a class=\"anchor\" href=\"#代码执行\">#</a> 代码执行</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> <span class=\"token parameter variable\">-g</span> hexo-cli</pre></td></tr></table></figure>",
            "tags": [
                "技术"
            ]
        },
        {
            "id": "https://hexo.iattach.top/2021/12/31/pcrbot%E7%9B%B8%E5%85%B3%E6%8F%92%E4%BB%B6%E5%AE%89%E8%A3%85/",
            "url": "https://hexo.iattach.top/2021/12/31/pcrbot%E7%9B%B8%E5%85%B3%E6%8F%92%E4%BB%B6%E5%AE%89%E8%A3%85/",
            "title": "pcrbot相关插件安装",
            "date_published": "2021-12-31T15:53:54.000Z",
            "content_html": "<h1 id=\"聊天词云生成\"><a class=\"anchor\" href=\"#聊天词云生成\">#</a> 聊天词云生成</h1>\n<p>仓库地址：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0Eta2lyYW1pL0dyb3VwV29yZENsb3VkR2VuZXJhdG9y\">https://github.com/A-kirami/GroupWordCloudGenerator</span></p>\n<p>安装依赖错误：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>error: Microsoft Visual C++ <span class=\"token number\">14.0</span> or greater is required. Get it with <span class=\"token string\">\"Microsoft C++ Build Tools\"</span></pre></td></tr></table></figure><p>待处理</p>\n<h1 id=\"贵族决斗\"><a class=\"anchor\" href=\"#贵族决斗\">#</a> 贵族决斗</h1>\n<p>仓库地址：<a href=\"\">https://github.com/Rs794613/PcrDuel</a></p>\n<p>DLC 文件参考 ReadME,unit 文件夹在 res 下，路径参考：res/img/priconne/unit</p>\n<p>因为 hoshino_xcw 嵌入了宝石银行，将宝石转换为金币部分代码：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>gid <span class=\"token operator\">=</span> ev<span class=\"token punctuation\">.</span>group_id</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>uid <span class=\"token operator\">=</span> ev<span class=\"token punctuation\">.</span>user_id</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>score_counter <span class=\"token operator\">=</span> ScoreCounter2<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>jewel_counter <span class=\"token operator\">=</span> jewel<span class=\"token punctuation\">.</span>jewelCounter<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>current_jewel <span class=\"token operator\">=</span> jewel_counter<span class=\"token punctuation\">.</span>_get_jewel<span class=\"token punctuation\">(</span>gid<span class=\"token punctuation\">,</span> uid<span class=\"token punctuation\">)</span>  <span class=\"token comment\">#获取当前宝石数        </span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>jewel_counter<span class=\"token punctuation\">.</span>_reduce_jewel<span class=\"token punctuation\">(</span>gid<span class=\"token punctuation\">,</span> uid<span class=\"token punctuation\">,</span> current_jewel<span class=\"token punctuation\">)</span> <span class=\"token comment\">#减少 num 的宝石</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>score_counter<span class=\"token punctuation\">.</span>_add_score<span class=\"token punctuation\">(</span>gid<span class=\"token punctuation\">,</span> uid<span class=\"token punctuation\">,</span> current_jewel<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>msg<span class=\"token operator\">=</span><span class=\"token string-interpolation\"><span class=\"token string\">f'兑换成功！已将</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>current_jewel<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">宝石兑换成金币'</span></span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">await</span> bot<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>ev<span class=\"token punctuation\">,</span> msg<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"猜头像\"><a class=\"anchor\" href=\"#猜头像\">#</a> 猜头像</h1>\n<p>部分数据过时。按照需要，可以更改头部调用，如果贵族决斗安装了的话：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> hoshino<span class=\"token punctuation\">.</span>modules<span class=\"token punctuation\">.</span>priconne<span class=\"token punctuation\">.</span>pcr_duel <span class=\"token keyword\">import</span> _pcr_duel_data <span class=\"token keyword\">as</span> _pcr_data</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> hoshino<span class=\"token punctuation\">.</span>modules<span class=\"token punctuation\">.</span>priconne<span class=\"token punctuation\">.</span>pcr_duel <span class=\"token keyword\">import</span> duel_chara <span class=\"token keyword\">as</span> chara</pre></td></tr></table></figure><p>但是会自动加入其他 dlc。</p>\n<p>只是更新 pcr 的话，可以改 priconne 下数据文件，手动添加新的角色。</p>\n<h1 id=\"daily_news\"><a class=\"anchor\" href=\"#daily_news\">#</a> Daily_News</h1>\n<p>on_fullmatch 关键词过多超过 2 个，需要删除，因为 nonebot 过低</p>\n<h1 id=\"hosbotmanagerweb\"><a class=\"anchor\" href=\"#hosbotmanagerweb\">#</a> HosBotManagerWeb</h1>\n<p>与 shebot 网页管理重复，删除 shebot 下 webServiceManager</p>\n<h1 id=\"群聊输出二维码\"><a class=\"anchor\" href=\"#群聊输出二维码\">#</a> 群聊输出二维码</h1>\n<p>windows server 2012r 出现 msvcr120.dll 文件丢失问题<br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cubWljcm9zb2Z0LmNvbS96aC1jbi9kb3dubG9hZC9jb25maXJtYXRpb24uYXNweD9pZD00MDc4NA==\"> https://www.microsoft.com/zh-cn/download/confirmation.aspx?id=40784</span> 下载对应版本</p>\n<h1 id=\"需要更新插件\"><a class=\"anchor\" href=\"#需要更新插件\">#</a> 需要更新插件</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3p5dWpzL3Bjcl9jYWxlbmRhcnI=\">https://github.com/zyujs/pcr_calendar</span><br />\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2NjMDA0L3BjcmpqYzI=\">https://github.com/cc004/pcrjjc2</span></p>\n",
            "tags": [
                "技术"
            ]
        },
        {
            "id": "https://hexo.iattach.top/2021/12/27/%E5%9B%BD%E5%86%85%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%BF%BB%E5%9B%9E%E5%A2%99%E5%86%85/",
            "url": "https://hexo.iattach.top/2021/12/27/%E5%9B%BD%E5%86%85%E6%9C%8D%E5%8A%A1%E5%99%A8%E7%BF%BB%E5%9B%9E%E5%A2%99%E5%86%85/",
            "title": "国内服务器翻回墙内",
            "date_published": "2021-12-27T18:09:08.000Z",
            "content_html": "<h1 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h1>\n<p>手头正好有台闲置的服务器，因为国内的网站有 ip 位置限制，所以配置成翻回国内的桥梁。</p>\n<h1 id=\"配置服务器\"><a class=\"anchor\" href=\"#配置服务器\">#</a> 配置服务器</h1>\n<p>这个服务器随意，但一定是国内内地 ip 的云服务器，然后系统镜像设置成 vps 用的最多 <code>centos 8</code>  镜像。先一定要重置密码，之后在防火墙设置任意一个之后我们会用到的服务器端口，协议设置开放 TCP、UDP，例如端口 <code>33333</code> 。</p>\n<p>登录服务器用 putty，方式 ssh。登录名 login 为 <code>root</code> ，密码为之前重置密码时设置的密码。</p>\n<h2 id=\"curl\"><a class=\"anchor\" href=\"#curl\">#</a> cURL</h2>\n<p>登录后，先安装 curl 包，方便 url 下载文件，执行以下命令：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>yum <span class=\"token function\">install</span> <span class=\"token parameter variable\">-y</span> <span class=\"token function\">curl</span></pre></td></tr></table></figure><h2 id=\"服务器github下载加速\"><a class=\"anchor\" href=\"#服务器github下载加速\">#</a> 服务器 Github 下载加速</h2>\n<p>然后需要加速 Github 仓库下载文件速度，先安装 nslookup 命令：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>yum <span class=\"token parameter variable\">-y</span> <span class=\"token function\">install</span> bind-utils</pre></td></tr></table></figure><p>然后执行以下命令来查找真实 ip 地址：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">nslookup</span> github.global.ssl.fastly.net</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">nslookup</span> github.com</pre></td></tr></table></figure><p>在执行结果中记住这两个 <code>Non-authoritative answer</code>  下 <code>Address</code>  给的 ip 地址。</p>\n<p>然后更改 host 文件，按上面命令的顺序用 vim 加入对应 ip：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">sudo</span> <span class=\"token function\">vim</span> /etc/hosts</pre></td></tr></table></figure><p>文件修改举例：</p>\n<figure class=\"highlight plain\"><figcaption data-lang=\"plain\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>X.X.X.X http://global-ssl.fastly.net </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>X.X.X.X http://github.com</pre></td></tr></table></figure><p>最后刷新 dns 缓存，来符合 host 更改的 ip，执行以下命令：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>yum <span class=\"token function\">install</span> <span class=\"token parameter variable\">-y</span> nscd</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>nscd <span class=\"token parameter variable\">-i</span> hosts</pre></td></tr></table></figure><h2 id=\"设置v2ray代理\"><a class=\"anchor\" href=\"#设置v2ray代理\">#</a> 设置 v2ray 代理</h2>\n<p>执行以下命令：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">bash</span> <span class=\"token operator\">&lt;</span><span class=\"token punctuation\">(</span><span class=\"token function\">curl</span> <span class=\"token parameter variable\">-sL</span> https://raw.githubusercontent.com/hijkpw/scripts/master/v2ray.sh<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>注意：因为是 github 源文件，所以可能下载很慢，可以走 github 文件加速<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naC5hcGkuOTk5ODg4NjYueHl6Lw==\"> https://gh.api.99988866.xyz/</span>，然后替换掉命令中的对应 url 链接。</p>\n<p>执行过程中，选 1 采取最直接的方式，如果有足够的的技术经验可以选别的。端口设置成我们之前在服务器防火墙设置开放的端口，比如 33333。</p>\n<p>脚本执行完后，会显示 v2ray 设置的信息和一个 vmess 链接。</p>\n<h1 id=\"客户端设置\"><a class=\"anchor\" href=\"#客户端设置\">#</a> 客户端设置</h1>\n<p>客户端因为本人更习惯 windows，所以使用的是 clash for windows 来连接服务器端。</p>\n<p>clash 采取 yaml 文件来进行服务器连接设置，可以使用<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iaWFueXVhbi54eXov\"> https://bianyuan.xyz/</span> 将上面的 vmess 链接转换为订阅 api，之后再 clash 的 profile 中 Download from a URL 填入获得订阅 URL。</p>\n<p>因为只是想打开国内的网站才用代理，在下载的设置文件中，更改 <code>proxy-groups</code>  以下所有内容。相关内容可以参考此文件，然后在 clash 的 profiles 中编辑一下：</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">proxy-groups</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 🔰 节点选择</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> select</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token key atrule\">proxies</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token punctuation\">-</span> ♻️ 自动选择</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token punctuation\">-</span> 🎯 全球直连</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> ♻️ 自动选择</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> url<span class=\"token punctuation\">-</span>test</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> http<span class=\"token punctuation\">:</span>//www.gstatic.com/generate_204</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token key atrule\">interval</span><span class=\"token punctuation\">:</span> <span class=\"token number\">300</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token key atrule\">proxies</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token punctuation\">-</span> <span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">name</span><span class=\"token punctuation\">:</span> 🎯 全球直连</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> select</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token key atrule\">proxies</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      <span class=\"token punctuation\">-</span> DIRECT</pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token key atrule\">rule-providers</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre> <span class=\"token key atrule\">direct</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#这里是国内常用网站的 url 订阅</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> http</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token key atrule\">behavior</span><span class=\"token punctuation\">:</span> domain</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token key atrule\">url</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"https://raw.githubusercontent.com/Loyalsoldier/clash-rules/release/direct.txt\"</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token key atrule\">path</span><span class=\"token punctuation\">:</span> ./ruleset/direct.yaml</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token key atrule\">interval</span><span class=\"token punctuation\">:</span> <span class=\"token number\">86400</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token key atrule\">rules</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre> <span class=\"token punctuation\">-</span> RULE<span class=\"token punctuation\">-</span>SET<span class=\"token punctuation\">,</span>direct<span class=\"token punctuation\">,</span>♻️ 自动选择</pre></td></tr><tr><td data-num=\"29\"></td><td><pre> <span class=\"token punctuation\">-</span> MATCH<span class=\"token punctuation\">,</span>🎯 全球直连 <span class=\"token comment\">#除了前面的 rule，其他未注明的全部直连</span></pre></td></tr></table></figure><h1 id=\"测试连接\"><a class=\"anchor\" href=\"#测试连接\">#</a> 测试连接</h1>\n<p>先在 profile 中选择对应的配置文件，然后在 General 中选择 Rule，最后右击任务栏的 clash 图标选择 System proxy，可以看到 clash 图标变色。然后在浏览器百度一下 IP 地址，如果网站中 ip 显示的是服务器 ip 地址，代表成功翻回墙内。</p>\n",
            "tags": [
                "技术"
            ]
        },
        {
            "id": "https://hexo.iattach.top/2021/12/26/QQ%E5%9B%BE%E7%89%87%E6%96%87%E4%BB%B6%E5%A4%B9Group2%E6%B8%85%E7%90%86/",
            "url": "https://hexo.iattach.top/2021/12/26/QQ%E5%9B%BE%E7%89%87%E6%96%87%E4%BB%B6%E5%A4%B9Group2%E6%B8%85%E7%90%86/",
            "title": "QQ图片文件夹Group2清理",
            "date_published": "2021-12-26T17:13:01.000Z",
            "content_html": "<p>参考：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9iYnMuc2FyYWJhMXN0LmNvbS8yYi90aHJlYWQtMjAwOTE4Mi0xLTEuaHRtbA==\">https://bbs.saraba1st.com/2b/thread-2009182-1-1.html</span></p>\n<p>QQ 的自带清理工具无法扫描到 Group2 文件夹，QQ Group2 整个文件夹超级大打开都要半天。但是如果只是全清空的话包括近期的所有群图片就都没了。</p>\n<p>但是 tim 自带的清理工具又扫不到这个文件夹，最后通过在文件夹里面建立一个链接解决了。</p>\n<p>在管理员权限的 cmd 里进入 Image 文件夹，然后运行</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>mklink /d Group  .<span class=\"token punctuation\">\\</span>Group2</pre></td></tr></table></figure><p>建立一个 Group 到 Group2 的链接，之后再打开自带的文件清理器就能扫到这个文件夹了。</p>\n",
            "tags": [
                "技术"
            ]
        },
        {
            "id": "https://hexo.iattach.top/2021/12/25/hexo-shoka%E4%B8%BB%E9%A2%98%E5%8A%A0%E5%85%A5live2D/",
            "url": "https://hexo.iattach.top/2021/12/25/hexo-shoka%E4%B8%BB%E9%A2%98%E5%8A%A0%E5%85%A5live2D/",
            "title": "hexo - shoka主题加入live2D",
            "date_published": "2021-12-25T22:31:05.000Z",
            "content_html": "<h1 id=\"简单设置\"><a class=\"anchor\" href=\"#简单设置\">#</a> 简单设置</h1>\n<p>在 <code>themes\\shoka\\layout\\_partials</code>  目录下创建 <code>live2d.njk</code>  文件，放入以下代码：</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://cdn.jsdelivr.net/gh/stevenjoezhang/live2d-widget/autoload.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>script</span> <span class=\"token attr-name\">src</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://cdn.jsdelivr.net/npm/jquery/dist/jquery.min.js<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span><span class=\"token script\"></span><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;/</span>script</span><span class=\"token punctuation\">></span></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token tag\"><span class=\"token tag\"><span class=\"token punctuation\">&lt;</span>link</span> <span class=\"token attr-name\">rel</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>stylesheet<span class=\"token punctuation\">\"</span></span> <span class=\"token attr-name\">href</span><span class=\"token attr-value\"><span class=\"token punctuation attr-equals\">=</span><span class=\"token punctuation\">\"</span>https://cdn.jsdelivr.net/npm/font-awesome/css/font-awesome.min.css<span class=\"token punctuation\">\"</span></span><span class=\"token punctuation\">></span></span></pre></td></tr></table></figure><p>然后再同目录下的 <code>layout.njk</code>  下在 <code>&lt;/body&gt;</code>  前加入<br />\n <code>&#123;&#123; partial('_partials/live2d.njk') &#125;&#125;</code></p>\n<p>参考：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3N0ZXZlbmpvZXpoYW5nL2xpdmUyZC13aWRnZXQ=\">https://github.com/stevenjoezhang/live2d-widget</span></p>\n<h1 id=\"复杂自定义设置\"><a class=\"anchor\" href=\"#复杂自定义设置\">#</a> 复杂自定义设置</h1>\n<h2 id=\"方式1基于简单设置上的自定义\"><a class=\"anchor\" href=\"#方式1基于简单设置上的自定义\">#</a> 方式 1：基于简单设置上的自定义</h2>\n<p>参考: <span class=\"exturl\" data-url=\"aHR0cHM6Ly9weWhlcm1hbi5naXRodWIuaW8vMjAxOS8wOC8xMC9oZXhvJUU1JUE2JTgyJUU0JUJEJTk1JUU1JThBJUEwJUU1JTg1JUE1JUU4JTg3JUFBJUU1JUFFJTlBJUU0JUI5JTg5bGl2ZTJkJUU1JTkwJTg5JUU3JUE1JUE1JUU3JTg5JUE5Lw==\">https://pyherman.github.io/2019/08/10/hexo%E5%A6%82%E4%BD%95%E5%8A%A0%E5%85%A5%E8%87%AA%E5%AE%9A%E4%B9%89live2d%E5%90%89%E7%A5%A5%E7%89%A9/</span></p>\n<h3 id=\"本地文件\"><a class=\"anchor\" href=\"#本地文件\">#</a> 本地文件</h3>\n<p>在博客源文件（即 source）目录下，执行前述的 <code>git clone</code>  命令。重新部署博客时，相关文件就会自动上传到对应的路径下。为了避免这些文件被 Hexo 插件错误地修改，可能需要设置 <code>skip_render</code> 。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">git</span> clone https://github.com/stevenjoezhang/live2d-widget.git</pre></td></tr></table></figure><p>然后在 <code>_config.yml</code>  中加入 git clone 后文件路径，防止被二次修改：</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">skip_render</span><span class=\"token punctuation\">:</span> live2d<span class=\"token punctuation\">-</span>widget/*</pre></td></tr></table></figure><p>修改之前简单设置中 <code>autoload.js</code>  中的常量 <code>live2d_path</code>  为 <code>live2d-widget</code>  这一目录的路径：</p>\n<figure class=\"highlight js\"><figcaption data-lang=\"JavaScript\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">const</span> live2d_path <span class=\"token operator\">=</span> <span class=\"token string\">\"/live2d-widget/\"</span><span class=\"token punctuation\">;</span></pre></td></tr></table></figure><h3 id=\"cdn\"><a class=\"anchor\" href=\"#cdn\">#</a> CDN</h3>\n<p>直接修改之前简单设置中 <code>autoload.js</code>  中的常量 <code>live2d_path</code>  为 <code>live2d-widget</code>  这一目录 CDN 的 URL。</p>\n<h2 id=\"方式2插件安装\"><a class=\"anchor\" href=\"#方式2插件安装\">#</a> 方式 2：插件安装</h2>\n<p>上面简单配置添加过的话，注意删除 <code>layout.njk</code>  添加的语句，避免重复冲突。</p>\n<p>参考：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmltbGV0ZS5jbi9hcnRpY2xlL0xpdmUyZC1Db25maWcuaHRtbA==\">https://blog.imlete.cn/article/Live2d-Config.html</span> 和 <a href=\"%E5%92%8Chttps://github.com/EYHN/hexo-helper-live2d\">https://github.com/EYHN/hexo-helper-live2d</a></p>\n<p>模型适配较少，但因为 hexo 有对应插件整合设置比较方便，执行以下命令：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">npm</span> <span class=\"token function\">install</span> <span class=\"token parameter variable\">--save</span> hexo-helper-live2d</pre></td></tr></table></figure><p>然后再 <code>_config.yml</code>  中添加：</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">live2d</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">enable</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\"># 是否开启 live2d</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">scriptFrom</span><span class=\"token punctuation\">:</span> local <span class=\"token comment\">## 脚本从本地引入</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token key atrule\">pluginRootPath</span><span class=\"token punctuation\">:</span> live2dw/ <span class=\"token comment\"># 模型根目录 (指 hexo g 后生成 public\\live2dw 文件名)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>  <span class=\"token key atrule\">pluginJsPath</span><span class=\"token punctuation\">:</span> lib/ <span class=\"token comment\"># 依赖 js 的文件夹名 (public\\live2dw\\lib)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  <span class=\"token key atrule\">pluginModelPath</span><span class=\"token punctuation\">:</span> assets/ <span class=\"token comment\"># 模型存放目录 (public\\live2dw\\assets)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>  <span class=\"token key atrule\">tagMode</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span> <span class=\"token comment\"># 标记模式 (未知) </span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token key atrule\">log</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">false</span> <span class=\"token comment\"># 日志</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token key atrule\">model</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 模型</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token key atrule\">use</span><span class=\"token punctuation\">:</span> live2d<span class=\"token punctuation\">-</span>widget<span class=\"token punctuation\">-</span>model<span class=\"token punctuation\">-</span>wanko <span class=\"token comment\"># 使用的模型名称</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token key atrule\">display</span><span class=\"token punctuation\">:</span> <span class=\"token comment\"># 显示</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token key atrule\">position</span><span class=\"token punctuation\">:</span> right <span class=\"token comment\"># 显示在右边 (left 显示在左边)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token key atrule\">width</span><span class=\"token punctuation\">:</span> <span class=\"token number\">150</span> <span class=\"token comment\"># 宽度</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token key atrule\">height</span><span class=\"token punctuation\">:</span> <span class=\"token number\">300</span> <span class=\"token comment\"># 高度</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token key atrule\">mobile</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token key atrule\">show</span><span class=\"token punctuation\">:</span> <span class=\"token boolean important\">true</span> <span class=\"token comment\"># 手机端是否显示</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token key atrule\">react</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token key atrule\">opacity</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0.7</span> <span class=\"token comment\"># 透明度</span></pre></td></tr></table></figure>",
            "tags": [
                "技术"
            ]
        },
        {
            "id": "https://hexo.iattach.top/2021/12/24/hoshino-xcw-pcrbot%E6%8F%92%E4%BB%B6%E5%AE%89%E8%A3%85%E3%80%81%E8%AE%BE%E7%BD%AE%E5%8F%8A%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98/",
            "url": "https://hexo.iattach.top/2021/12/24/hoshino-xcw-pcrbot%E6%8F%92%E4%BB%B6%E5%AE%89%E8%A3%85%E3%80%81%E8%AE%BE%E7%BD%AE%E5%8F%8A%E7%9B%B8%E5%85%B3%E9%97%AE%E9%A2%98/",
            "title": "hoshino_xcw pcrbot插件安装、设置及相关问题",
            "date_published": "2021-12-24T15:00:35.000Z",
            "content_html": "<h1 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h1>\n<p>因为插件安装有各种各样的问题和设置，所以单开一章来讲。</p>\n<h1 id=\"错误-aiochttp\"><a class=\"anchor\" href=\"#错误-aiochttp\">#</a> 错误 aiochttp</h1>\n<p>按照之前文章设置完后，运行<strong><span class=\"exturl\" data-url=\"aHR0cDovL3J1bi5weQ==\"> run.py</span></strong>。会显示如下错误：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Traceback <span class=\"token punctuation\">(</span>most recent call last<span class=\"token punctuation\">)</span>:</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  File <span class=\"token string\">\"C:\\XCW\\Hoshino<span class=\"token entity\" title=\"\\r\">\\r</span>un.py\"</span>, line <span class=\"token number\">1</span>, <span class=\"token keyword\">in</span> <span class=\"token operator\">&lt;</span>module<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token function\">import</span> hoshino</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  File <span class=\"token string\">\"C:\\XCW\\Hoshino\\hoshino\\__init__.py\"</span>, line <span class=\"token number\">3</span>, <span class=\"token keyword\">in</span> <span class=\"token operator\">&lt;</span>module<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token function\">import</span> aiocqhttp</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>ModuleNotFoundError: No module named <span class=\"token string\">'aiocqhttp'</span></pre></td></tr></table></figure><p>因为依赖没装，先去执行 A 号套餐。</p>\n<h1 id=\"错误-pil\"><a class=\"anchor\" href=\"#错误-pil\">#</a> 错误 PIL</h1>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>Traceback <span class=\"token punctuation\">(</span>most recent call last<span class=\"token punctuation\">)</span>:</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  File <span class=\"token string\">\"C:\\XCW\\Hoshino<span class=\"token entity\" title=\"\\r\">\\r</span>un.py\"</span>, line <span class=\"token number\">1</span>, <span class=\"token keyword\">in</span> <span class=\"token operator\">&lt;</span>module<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token function\">import</span> hoshino</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  File <span class=\"token string\">\"C:\\XCW\\Hoshino\\hoshino\\__init__.py\"</span>, line <span class=\"token number\">54</span>, <span class=\"token keyword\">in</span> <span class=\"token operator\">&lt;</span>module<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    from <span class=\"token builtin class-name\">.</span> <span class=\"token function\">import</span> R</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>  File <span class=\"token string\">\"C:\\XCW\\Hoshino\\hoshino\\R.py\"</span>, line <span class=\"token number\">6</span>, <span class=\"token keyword\">in</span> <span class=\"token operator\">&lt;</span>module<span class=\"token operator\">></span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    from Pillow <span class=\"token function\">import</span> Image</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>ModuleNotFoundError: No module named <span class=\"token string\">'Pillow'</span></pre></td></tr></table></figure><p>因为 pil 本地安装路径文件名为小写，需要改为大写。。。。。。</p>\n<figure class=\"highlight plain\"><figcaption data-lang=\"plain\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>C:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python39\\Lib\\site-packages\\pil</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>改为</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>C:\\Users\\Administrator\\AppData\\Local\\Programs\\Python\\Python39\\Lib\\site-packages\\PIL</pre></td></tr></table></figure><p>注意：如果其他插件用到，pip 安装会覆盖此文件夹名，改为小写。所以谨慎重安装此包，否则每次需要将其改为大写。</p>\n<h1 id=\"cv2-load-错误\"><a class=\"anchor\" href=\"#cv2-load-错误\">#</a> cv2 load 错误</h1>\n<p>这并不是 pip 安装的问题，是服务器 windows 本身设置的问题，当然需要先装 opencv-python，然后选择 “我的电脑”——“属性”——“管理”——” 添加角色和功能 “—— 勾选” 桌面体验 “，点击安装，安装之后重启即可。（windows server 2012）</p>\n<p>参考：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2phdmFzdGFydC9hcnRpY2xlL2RldGFpbHMvMTEzMzA2OTM5\">https://blog.csdn.net/javastart/article/details/113306939</span></p>\n<h1 id=\"需要手动安装的包\"><a class=\"anchor\" href=\"#需要手动安装的包\">#</a> 需要手动安装的包</h1>\n<p>保险起见，可以执行一下安装，杜绝插件出现的一些 module 未安装错误。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pip <span class=\"token function\">install</span> fuzzywuzzy</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>pip <span class=\"token function\">install</span> jieba</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>pip <span class=\"token function\">install</span> opencv-python</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>pip <span class=\"token function\">install</span> bs4</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>pip <span class=\"token function\">install</span> pandas</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>pip <span class=\"token function\">install</span> pinyin</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>pip <span class=\"token function\">install</span> openpyxl</pre></td></tr></table></figure><h1 id=\"存在bug的插件\"><a class=\"anchor\" href=\"#存在bug的插件\">#</a> 存在 bug 的插件</h1>\n<ul>\n<li>B 站动态 bilidynamicpush</li>\n<li>官方漫画 priconne/comic.py (需要梯子)</li>\n<li>台服新闻 (需要梯子)</li>\n<li>pcrjjc2_xcw 中 <strong>sv_help</strong> 名字定义不统一，需要修改代码 / 频率太快，需要修改间隔时间</li>\n<li>setu_mix pivix (需要梯子)</li>\n</ul>\n",
            "tags": [
                "坑",
                "插件,hoshino_xcw,pcrbot,qq机器人，群聊机器人，qq"
            ]
        },
        {
            "id": "https://hexo.iattach.top/2021/12/24/%E4%BD%BF%E7%94%A8gitlab-hexo-shoka%E5%BB%BA%E7%AB%8Bpages/",
            "url": "https://hexo.iattach.top/2021/12/24/%E4%BD%BF%E7%94%A8gitlab-hexo-shoka%E5%BB%BA%E7%AB%8Bpages/",
            "title": "使用gitlab + hexo shoka建立镜像网站pages",
            "date_published": "2021-12-24T10:24:05.000Z",
            "content_html": "<p>在之前的文章<a href=\"https://hexo.iattach.top/2021/12/21/%E5%BB%BA%E7%AB%99%E8%BF%87%E7%A8%8B/\">建站过程</a>中有提到用 github + hexo 来建站，但是因为百度搜索爬虫不能直接爬 github pages，本次采用 gitlab 建立镜像网站，这样就可以让百度能够搜索的到。</p>\n<h1 id=\"dns\"><a class=\"anchor\" href=\"#dns\">#</a> DNS</h1>\n<p>首先跟之前一样 github 的 dns 记录一样，添加两条记录：域名网址和 www 域名网址，然后类型<strong> CNAME</strong>，线路类型百度，记录值填对应的 gitlab pages 的网址。这样百度爬虫会被导向 gitlab 上面。</p>\n<h1 id=\"gitlab设置\"><a class=\"anchor\" href=\"#gitlab设置\">#</a> gitlab 设置</h1>\n<p>来源：<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuamlhbnNodS5jb20vcC9jNDI4MzVhNWE2NGY=\">https://www.jianshu.com/p/c42835a5a64f</span></p>\n<p>在 Gitlab 创建一个 repository，<span class=\"exturl\" data-url=\"aHR0cDovL3huLS14eHgtYzg4ZDg5eDV3bC5naXRsYWIuaW8=\">名字为 xxx.gitlab.io</span>，xxx 就是你的 Gitlab 用户名。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">git</span> init</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">git</span> remote <span class=\"token function\">add</span> origin git@gitlab.com:xxx/xxx.gitlab.io.git</pre></td></tr></table></figure><p>注意：如果 themes 下的主题是 git clone 下来，那么会自带.git 文件夹，推送到 gitlab 上时不会推送源文件，在 git add 前务必将使用 themes 的.git 删掉。如果不小心 add 上了，请执行一下命令清理缓存再重新 add 文件：</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">git</span> <span class=\"token function\">rm</span> <span class=\"token parameter variable\">-r</span> <span class=\"token parameter variable\">--cached</span> <span class=\"token builtin class-name\">.</span></pre></td></tr></table></figure><p>然后再博客根目录下创建 <code>.gitlab-ci.yml</code> , 内容参考：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRsYWIuY29tL3BhZ2VzL2hleG8vYmxvYi9tYXN0ZXIvLmdpdGxhYi1jaS55bWw=\">https://gitlab.com/pages/hexo/blob/master/.gitlab-ci.yml</span></p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">image</span><span class=\"token punctuation\">:</span> <span class=\"token key atrule\">node</span><span class=\"token punctuation\">:</span> <span class=\"token comment\">#最新版本</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token key atrule\">cache</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token key atrule\">paths</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token punctuation\">-</span> node_modules/</pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token key atrule\">before_script</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>  <span class=\"token punctuation\">-</span> npm install hexo<span class=\"token punctuation\">-</span>cli <span class=\"token punctuation\">-</span>g</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>  <span class=\"token punctuation\">-</span> test <span class=\"token punctuation\">-</span>e package.json <span class=\"token important\">&amp;&amp;</span> npm install</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>  <span class=\"token punctuation\">-</span> export HEXO_ALGOLIA_INDEXING_KEY=xxx <span class=\"token comment\">#xxx = 你的 algolia admin key</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token punctuation\">-</span> hexo algolia <span class=\"token comment\">#如果装了 algolia 的话</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token punctuation\">-</span> hexo generate</pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token key atrule\">pages</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>  <span class=\"token key atrule\">script</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token punctuation\">-</span> hexo generate</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>  <span class=\"token key atrule\">artifacts</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token key atrule\">paths</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>      <span class=\"token punctuation\">-</span> public</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>  <span class=\"token key atrule\">rules</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">if</span><span class=\"token punctuation\">:</span> $CI_COMMIT_REF_NAME == $CI_DEFAULT_BRANCH</pre></td></tr></table></figure><p>git 推送到远程仓库之后，GitLab CI 会自动开始运行，构建成功以后稍等几分钟，打开 <span class=\"exturl\" data-url=\"aHR0cHM6Ly94eHguZ2l0bGFiLmlv\">https://xxx.gitlab.io</span> 应该就能看到自己的博客了。</p>\n<p>如果想隐藏博客源码，又不想影响博客的正常访问，可以在仓库的<strong> Settings -&gt; General -&gt; Visibility, project features, permissions</strong> 里面将仓库权限 <code>Project visibility</code>  设置为<strong> private</strong>，然后把下面的<strong> Pages</strong> 选项改为<strong> Everyone</strong>。</p>\n<h1 id=\"gitlab-pages的个人域名https-搭配dnspod签发的证书\"><a class=\"anchor\" href=\"#gitlab-pages的个人域名https-搭配dnspod签发的证书\">#</a> Gitlab pages 的个人域名 https 搭配 dnspod 签发的证书</h1>\n<p>需要在 pages 的选项下，建自已的 Pages Domain，然后再 Certificate 选项填写对应的密文：</p>\n<ul>\n<li>\n<p>Certificate (PEM) ： 放入 xxx_bundle.pem 中的内容，所有都要填写。因为是通过中级 CA 机构颁发的证书，拿到的证书文件包含多份证书。</p>\n</li>\n<li>\n<p>Key (PEM) ： 放入 xxx.key 中的内容。</p>\n</li>\n</ul>\n<p>然后就可以打开 https 对应的链接了</p>\n<h1 id=\"附言bash脚本\"><a class=\"anchor\" href=\"#附言bash脚本\">#</a> 附言：bash 脚本</h1>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>@echo on</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>cmd /c hexo clean</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>cmd /c hexo g</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>cmd /c <span class=\"token builtin class-name\">set</span> <span class=\"token assign-left variable\">HEXO_ALGOLIA_INDEXING_KEY</span><span class=\"token operator\">=</span>xxx <span class=\"token comment\">#xxx = 你的 algolia admin key</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>cmd /c hexo algolia</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>cmd /c hexo d</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>cmd /c <span class=\"token function\">git</span> <span class=\"token function\">add</span> <span class=\"token builtin class-name\">.</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>cmd /c <span class=\"token function\">git</span> commit <span class=\"token parameter variable\">-m</span> <span class=\"token string\">\"upload file %DATE%_%TIME%\"</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>cmd /c <span class=\"token function\">git</span> push</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>pause</pre></td></tr></table></figure>",
            "tags": [
                "技术"
            ]
        },
        {
            "id": "https://hexo.iattach.top/2021/12/23/win10-%E5%8F%B3%E9%94%AE%E8%8F%9C%E5%8D%95%E7%AC%AC%E4%B8%80%E6%AC%A1%E6%89%93%E5%BC%80%E6%85%A2/",
            "url": "https://hexo.iattach.top/2021/12/23/win10-%E5%8F%B3%E9%94%AE%E8%8F%9C%E5%8D%95%E7%AC%AC%E4%B8%80%E6%AC%A1%E6%89%93%E5%BC%80%E6%85%A2/",
            "title": "win10 右键菜单第一次打开慢",
            "date_published": "2021-12-23T00:29:02.000Z",
            "content_html": "<p>最近苦恼很长时间，右击图片或视频第一次都很慢，弄了很多右键菜单管理软件都无果。</p>\n<p>结果突然想起来 win10<strong> 事件查看器</strong>应该有东西，一看果然，每次转圈慢都有这个事件：</p>\n<figure class=\"highlight plain\"><figcaption data-lang=\"plain\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>服务器 &#123;3C5E2B20-B911-44E2-A2DD-9F05E7B5E775&#125; 没有在要求的超时时间内向 DCOM 注册。</pre></td></tr></table></figure><p>在注册表查了下，找到了下面这个键值：</p>\n<p 3C5E2B20-B911-44E2-A2DD-9F05E7B5E775=\"\">HKEY_CLASSES_ROOT\\WOW6432Node\\CLSID</p>\n<p>看了下程序名字<strong> PhotoViewerHelper Class</strong>，在 google 搜了下什么都没有。</p>\n<p>翻了翻下面的路径: HKEY_CLASSES_ROOT\\WOW6432Node\\CLSID {3C5E2B20-B911-44E2-A2DD-9F05E7B5E775}\\LocalServer32</p>\n<p>一看，呦，这不是苹果的东西吗。</p>\n<p>...........\\Apple\\Internet Services\\ApplePhotoStreams.exe</p>\n<p>结果把苹果东西全卸载（我是不经常用，经常用可以卸载重装），右键菜单就好了，不再转圈了，呵呵呵呵呵。</p>\n",
            "tags": [
                "坑"
            ]
        },
        {
            "id": "https://hexo.iattach.top/2021/12/22/%E8%85%BE%E8%AE%AF%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8-qq%E6%9C%BA%E5%99%A8%E4%BA%BA/",
            "url": "https://hexo.iattach.top/2021/12/22/%E8%85%BE%E8%AE%AF%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8-qq%E6%9C%BA%E5%99%A8%E4%BA%BA/",
            "title": "腾讯win云服务器 + pcr机器人(hoshino_xcw),从头开始手动装全过程记录",
            "date_published": "2021-12-22T09:27:05.000Z",
            "content_html": "<h1 id=\"前言\"><a class=\"anchor\" href=\"#前言\">#</a> 前言</h1>\n<p>因为手里有多个服务器，机器人某天挂了，手残把服务器换镜像了。。。有感而发，开始记录下过程供自己日后参考。</p>\n<h1 id=\"腾讯云服务器初始设置\"><a class=\"anchor\" href=\"#腾讯云服务器初始设置\">#</a> 腾讯云服务器初始设置</h1>\n<p>服务器镜像最好选 windows server 2012。windows 是因为对小白，和咸鱼（指我）友好。2012 是在 windows8 不内置 defender，而 2016 和 2019 都是在 win10 基础上改的，都内置 windows defender，开启之后加远程桌面，任务管理器显示内存占用达到 50%。懒得去找 2016/2019 怎么关了，就先用 2012 吧。</p>\n<p>服务器第一次或者重装镜像后，都需要重置密码，方便远程桌面登陆。</p>\n<h2 id=\"关闭异常登陆通知\"><a class=\"anchor\" href=\"#关闭异常登陆通知\">#</a> 关闭异常登陆通知</h2>\n<p>因为异地登陆云服务器，结果发了一堆邮件。参考<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jbG91ZC50ZW5jZW50LmNvbS9kb2N1bWVudC9wcm9kdWN0LzI5Ni82MDA2MQ==\"> https://cloud.tencent.com/document/product/296/60061</span>，但是不可以关闭异常登录检测。</p>\n<p>在<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb25zb2xlLmNsb3VkLnRlbmNlbnQuY29tL2N3cC9tYW5hZ2UvbG9naW5Mb2c=\"> https://console.cloud.tencent.com/cwp/manage/loginLog</span> 中，对登陆历史中自己的 ip 地址加入白名单。</p>\n<h2 id=\"端口开放\"><a class=\"anchor\" href=\"#端口开放\">#</a> 端口开放</h2>\n<p>来源可以默认 0.0.0.0/0 对所有 ip 及其端口开放。</p>\n<table>\n<thead>\n<tr>\n<th>端口</th>\n<th>协议</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>21</td>\n<td>TCP</td>\n<td>FTP 用</td>\n</tr>\n<tr>\n<td>22</td>\n<td>TCP</td>\n<td>linux 远程登录</td>\n</tr>\n<tr>\n<td>80</td>\n<td>TCP</td>\n<td>HTTP 端口</td>\n</tr>\n<tr>\n<td>443</td>\n<td>TCP</td>\n<td>HTTPS 用</td>\n</tr>\n<tr>\n<td>3389</td>\n<td>TCP</td>\n<td>windows 远程登录</td>\n</tr>\n<tr>\n<td>8080</td>\n<td>TCP</td>\n<td>用</td>\n</tr>\n<tr>\n<td>9222</td>\n<td>TCP</td>\n<td>MySQL 用</td>\n</tr>\n<tr>\n<td>ALL</td>\n<td>ICMP</td>\n<td>放通 ping</td>\n</tr>\n</tbody>\n</table>\n<p><img data-src=\"/assets/wallpaper-2311325.jpg\" alt=\"Caption\" /></p>\n<h2 id=\"软件安装\"><a class=\"anchor\" href=\"#软件安装\">#</a> 软件安装</h2>\n<p>所有的下载当然先从内置的 IE11 开始，打开后选<strong>不使用推荐设置</strong>。然后<strong> Internet 选项</strong>下的<strong>安全</strong>将允许级别调为中。使用<strong>推荐设置</strong>的话，这里是灰色不可调的，误选的话，在<strong>安全</strong>选项卡下面<strong>自定义级别</strong>下面拉到最下面将<strong>文件下载</strong>选择启用。</p>\n<p>PS：传文件可以使用<span class=\"exturl\" data-url=\"aHR0cHM6Ly90cmFuc2Zlci5zaC8=\"> https://transfer.sh/</span>，国内外访问都很快。远程登陆传文件实在太慢了。</p>\n<h3 id=\"浏览器\"><a class=\"anchor\" href=\"#浏览器\">#</a> 浏览器</h3>\n<p>chrome 内存泄漏，且因为国内问题无法下载。建议使用 firefox 或者 edge，注意 firefox 国内版本和国际版账户不通用。</p>\n<h3 id=\"python\"><a class=\"anchor\" href=\"#python\">#</a> python</h3>\n<p>python 下载国内镜像：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ucG0udGFvYmFvLm9yZy9taXJyb3JzL3B5dGhvbi8=\">https://npm.taobao.org/mirrors/python/</span>，最新版本选择 python-x.x.x-amd64.exe。</p>\n<p>安装注意勾选 ADD Python x.x to PATH。</p>\n<h3 id=\"git\"><a class=\"anchor\" href=\"#git\">#</a> Git</h3>\n<p>git for windows 国内镜像：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ucG0udGFvYmFvLm9yZy9taXJyb3JzL2dpdC1mb3Itd2luZG93cy8=\">https://npm.taobao.org/mirrors/git-for-windows/</span>, 下载 Git-x.xx.x-64-bit.exe</p>\n<p>pip 安装国内源设置，参考：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3UwMTExMDc1NzUvYXJ0aWNsZS9kZXRhaWxzLzEwOTkwMTA4Ng==\">https://blog.csdn.net/u011107575/article/details/109901086</span></p>\n<p>使用配置文件，一次解决</p>\n<p>windows 下，直接在 C:\\Users\\Administrator 目录中创建一个 pip 目录，再新建文件 pip.ini，填入以下代码。（这里用的是清华的数据）</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># pip.ini</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">[</span>global<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>index-url <span class=\"token operator\">=</span> https://pypi.tuna.tsinghua.edu.cn/simple <span class=\"token comment\">#设置源地址</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">[</span>install<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>trusted-host <span class=\"token operator\">=</span> pypi.tuna.tsinghua.edu.cn <span class=\"token comment\">#信任源地址</span></pre></td></tr></table></figure><p>注意不要讲 #及后面的东西加入，ini 不能区分识别注释</p>\n<h3 id=\"notepad\"><a class=\"anchor\" href=\"#notepad\">#</a> notepad++</h3>\n<p>代码文件轻量编辑器，暂时没发现国内源。虽然国内网站有但是会捆绑软件之类，有条件建议下载官方安装包（打开比较慢）：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ub3RlcGFkLXBsdXMtcGx1cy5vcmcvZG93bmxvYWRzLw==\">https://notepad-plus-plus.org/downloads/</span></p>\n<h3 id=\"ffmpeg-非必须\"><a class=\"anchor\" href=\"#ffmpeg-非必须\">#</a> ffmpeg 非必须</h3>\n<p>参考：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLmdvLWNxaHR0cC5vcmcvZ3VpZGUvcXVpY2tfc3RhcnQuaHRtbCMlRTYlOUIlQjQlRTYlOTYlQjA=\">https://docs.go-cqhttp.org/guide/quick_start.html#%E6%9B%B4%E6%96%B0</span></p>\n<p>为了支持任意格式的语音发送，你需要安装 ffmpeg 。</p>\n<p>从<a href=\"%E8%BF%99%E9%87%8C\"> https://www.gyan.dev/ffmpeg/builds/ffmpeg-release-full.7z</a> 下载并解压，并为 bin 这个文件夹添加环境变量。</p>\n<p>如果遇到下载速度缓慢的问题可以用<a href=\"%E8%BF%99%E4%B8%AA%E6%BA%90\"> https://downloads.go-cqhttp.org/ffmpeg-release-full.7z</a>。</p>\n<p>然后在 cmd 输入 (不能使用 powershell）</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>setx /M <span class=\"token environment constant\">PATH</span> <span class=\"token string\">\"C:\\Program Files<span class=\"token entity\" title=\"\\f\">\\f</span>fmpeg<span class=\"token entity\" title=\"\\b\">\\b</span>in;%PATH%\"</span></pre></td></tr></table></figure><p>自行将这个指令中的 C:\\Program Files 替换成你的解压目录。</p>\n<h1 id=\"部署pcr-qq机器人\"><a class=\"anchor\" href=\"#部署pcr-qq机器人\">#</a> 部署 pcr qq 机器人</h1>\n<p>机器人采用的是 hoshino_xcw 为基础，后续逐渐添加其他插件。以上软件部分及本部分参考：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3BjcmJvdC9ob3NoaW5vX3hjdy93aWtpLyVFOSU4MyVBOCVFNyVCRCVCMiVFNiVCNSU4MSVFNyVBOCU4QiVFRiVCQyU4QyVFNCVCOCVCQiVFOCVBNiU4MSVFNSU4RiU4MiVFOCU4MCU4MyVFNiU5NiU4NyVFNiVBMSVBMw==\">https://github.com/pcrbot/hoshino_xcw/wiki/%E9%83%A8%E7%BD%B2%E6%B5%81%E7%A8%8B</span> 和 <a href=\"windows%E4%B8%8B%E7%9A%84%E5%AE%89%E8%A3%85%EF%BC%8C%E5%89%AF%E5%8F%82%E8%80%83\">https://github.com/Soung2279/haru-bot-setup/</a>，注意 go-cqhttp,hoshino_xcw 与 yobot 分别独立，可以单独安装互不干扰。</p>\n<h2 id=\"go-cqhttp\"><a class=\"anchor\" href=\"#go-cqhttp\">#</a> go-cqhttp</h2>\n<p>这个软件是用来获取 qq 消息的，参考：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9kb2NzLmdvLWNxaHR0cC5vcmcvZ3VpZGUvcXVpY2tfc3RhcnQuaHRtbCMlRTYlOUIlQjQlRTYlOTYlQjA=\">https://docs.go-cqhttp.org/guide/quick_start.html#%E6%9B%B4%E6%96%B0</span></p>\n<p>从<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL01yczRzL2dvLWNxaHR0cC9yZWxlYXNlcw==\"> https://github.com/Mrs4s/go-cqhttp/releases</span> 下载放在单独的目录下，<strong>go-cqhttp_windows_amd64.exe</strong>，可以用 github 文件加速之类的工具加快下载速度。</p>\n<p>启动先直接打开，配置文件选择<strong> 3：反向 Websocket 通信</strong>，然后会自动生成配置文件。配置好后，再启动，选择手机扫码登陆。下面的几个命令可以用在 exe 同一目录下的 bat 脚本运行。注意 exe 文件名须一致。</p>\n<h3 id=\"配置文件configyml-devicejson\"><a class=\"anchor\" href=\"#配置文件configyml-devicejson\">#</a> 配置文件 config.yml + device.json</h3>\n<p>文件自动生成后，需要修改第一行 qq 号为机器人的 qq 号和最后的 ws-reverse 部分如下：</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">servers</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token comment\"># 反向 WS 设置</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token comment\"># 8080 为 HoshinoBot 默认端口号</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">ws-reverse</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>      <span class=\"token key atrule\">universal</span><span class=\"token punctuation\">:</span> ws<span class=\"token punctuation\">:</span>//127.0.0.1<span class=\"token punctuation\">:</span>8080/ws/</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>      <span class=\"token key atrule\">api</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>      <span class=\"token key atrule\">event</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>      <span class=\"token key atrule\">reconnect-interval</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3000</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>      <span class=\"token key atrule\">middlewares</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token key atrule\">&lt;&lt;</span><span class=\"token punctuation\">:</span> <span class=\"token important\">*default</span> <span class=\"token comment\"># 引用默认中间件</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>  <span class=\"token comment\"># 9222 为 yobot 默认端口号</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>  <span class=\"token punctuation\">-</span> <span class=\"token key atrule\">ws-reverse</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>      <span class=\"token key atrule\">universal</span><span class=\"token punctuation\">:</span> ws<span class=\"token punctuation\">:</span>//127.0.0.1<span class=\"token punctuation\">:</span>9222/ws/</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>      <span class=\"token key atrule\">api</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>      <span class=\"token key atrule\">event</span><span class=\"token punctuation\">:</span> <span class=\"token string\">\"\"</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>      <span class=\"token key atrule\">reconnect-interval</span><span class=\"token punctuation\">:</span> <span class=\"token number\">3000</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>      <span class=\"token key atrule\">middlewares</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token key atrule\">&lt;&lt;</span><span class=\"token punctuation\">:</span> <span class=\"token important\">*default</span> <span class=\"token comment\"># 引用默认中间件</span></pre></td></tr></table></figure><p>来源：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jbi5wY3Jib3QuY29tL2RlcGxveS1ob3NoaW5vYm90LW9uLWNlbnRvcy8=\">https://cn.pcrbot.com/deploy-hoshinobot-on-centos/</span></p>\n<p>修改后再次运行 go-cqhttp，为了玄学避免风控，可以更改 device.json 中 protocol 值 0 为 1，然后再启动 go-cqhttp，这样机器人 qq 头像一直显示为手机在线，但是这会和手机端登陆 bot 账号冲突，因为一个 qq 不能同时在两个手机端登陆。</p>\n<p>启动后，应该会显示连接到反向 ws 服务器出现错误之类的，这是正常现象，因为 yobot 和 qq 机器人主体还未启动。这时候在机器人 qq 加入的 qq 群发送消息或者私聊，会显示在 go-cqhttp 运行的窗口内。</p>\n<p>注意：这个 json 在第一次用 go-cqhttp 登陆 qq 后才会有。</p>\n<h3 id=\"加快启动速度命令bat脚本\"><a class=\"anchor\" href=\"#加快启动速度命令bat脚本\">#</a> 加快启动速度命令 + bat 脚本</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>.<span class=\"token punctuation\">\\</span>go-cqhttp.exe faststart</pre></td></tr></table></figure><h3 id=\"更新命令bat脚本\"><a class=\"anchor\" href=\"#更新命令bat脚本\">#</a> 更新命令 + bat 脚本</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>.<span class=\"token punctuation\">\\</span>go-cqhttp.exe update https://github.com.cnpmjs.org</pre></td></tr></table></figure><h2 id=\"安装hoshinobot_xcw\"><a class=\"anchor\" href=\"#安装hoshinobot_xcw\">#</a> 安装 HoshinoBot_xcw</h2>\n<p>右击想要安装的目录路径，右击打开 git bash，输入</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">git</span> clone https://github.com.cnpmjs.org/sanshanya/hoshino_xcw.git</pre></td></tr></table></figure><h3 id=\"安装依赖\"><a class=\"anchor\" href=\"#安装依赖\">#</a> 安装依赖</h3>\n<p>先安装基本插件，在<strong> XCW / 装依赖 / A 号套餐</strong>下，执行升级 pip，装依赖 1 和装依赖 2 三个 bat 脚本。注意：python 版本不是 3.8 的话，需要修改 bat 脚本，将<strong> py</strong> 命令后面的 <code>-3.8</code>  选项删除。</p>\n<p>为了使用所有插件，使用 B 号套餐。在<strong> XCW / 装依赖 / B 号套餐</strong>下复制<strong>自动装依赖.ps1</strong> 到<strong> XCW/hoshino</strong> 下，并打开此文件，将<strong> py</strong> 命令后面的 <code>-3.8</code>  选项删除（因为之前我们装的是 3.9 版本的 python），再用 powershell 执行:</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">cd</span> C:<span class=\"token punctuation\">\\</span><span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span><span class=\"token punctuation\">..</span><span class=\"token punctuation\">\\</span>XCW<span class=\"token punctuation\">\\</span>Hoshino <span class=\"token comment\">#机器人文件夹绝对路径</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>.<span class=\"token punctuation\">\\</span>自动装依赖.ps1</pre></td></tr></table></figure><h3 id=\"修改配置文件\"><a class=\"anchor\" href=\"#修改配置文件\">#</a> 修改配置文件</h3>\n<p>首先来到<strong> XCW\\Hoshino</strong></p>\n<p>重要：将 **__bot__示例.py<strong> 改名为</strong><strong> bot</strong>.py<strong> 并覆盖</strong> XCW\\Hoshino\\hoshino\\config<strong> 文件夹内的</strong><strong> bot</strong>.py**</p>\n<p>使用 notepad++ 编辑 **<strong>bot</strong>.py**, 根据注释进行修改.</p>\n<p>首次使用 hoshino 可暂时只修改第 13 行，即修改最高权限用户</p>\n<p>保存后关闭即可</p>\n<p>推荐修改的配置文件部分如下:</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token triple-quoted-string string\">'''---拥有最高权限的用户们的QQ---'''</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>SUPERUSERS <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1234567895</span><span class=\"token punctuation\">]</span>    <span class=\"token comment\"># 填写超级用户的 QQ 号，可填多个用半角逗号 \",\" 隔开</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>PYS <span class=\"token operator\">=</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">123214342</span><span class=\"token punctuation\">&#125;</span>            <span class=\"token comment\">#高级权限用户的 QQ 号</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">###################################</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token triple-quoted-string string\">'''---------昵称及网址----------'''</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>NICKNAME <span class=\"token operator\">=</span> <span class=\"token string\">r'镜华|小仓唯|露娜|at,qq=124324234'</span>       <span class=\"token comment\"># 设置 bot 的昵称，at，qq=xxxxxxxx 处为 bot 的 QQ 号，呼叫昵称等 @bot</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>IP <span class=\"token operator\">=</span> <span class=\"token string\">'333.33.33.3'</span>                                      <span class=\"token comment\">#修改为你的服务器 ip, 推荐修改</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>public_address <span class=\"token operator\">=</span> <span class=\"token string\">'333.33.33.3:8080'</span>                     <span class=\"token comment\">#修改为你的服务器 ip + 端口，推荐修改</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>PassWord <span class=\"token operator\">=</span> <span class=\"token string\">'123456'</span>                                           <span class=\"token comment\">#登录一些只限维护人知道密码的网页</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">###################################</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>IMAGE_PATH <span class=\"token operator\">=</span> <span class=\"token string\">\"C:\\\\go-cqhttp\\\\data\\\\images\"</span>                 <span class=\"token comment\">#MiraiGO 用这条，保持默认即可  PS：因为之前我们独立装了 go-cqhttp，这行修改为 go-cqhttp 的绝对路径</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token comment\"># 资源库文件夹，需可读可写，windows 下注意反斜杠转义</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>RES_DIR <span class=\"token operator\">=</span> <span class=\"token string\">\"C:\\\\res\"</span> <span class=\"token comment\">#res 文件的绝对路径，配合插件 xcw 使用</span></pre></td></tr></table></figure><p>其他插件安装及相关问题请见<a href=\"\"></a></p>\n<h2 id=\"安装yobot\"><a class=\"anchor\" href=\"#安装yobot\">#</a> 安装 yobot</h2>\n<p>请于<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3l1dWRpL3lvYm90L3JlbGVhc2VzL3RhZy92My42LjE0\"> https://github.com/yuudi/yobot/releases/tag/v3.6.14</span> 下载 yobot 便携版：yobot-.RELEASE_VER.v.-windows64.zip，解压后放在单独的目录下。双击 “yobot.exe” 启动服务</p>\n<p>以下部分内容来源参考：<span class=\"exturl\" data-url=\"aHR0cHM6Ly95b2JvdC53aW4vaW5zdGFsbC9XaW5kb3dzLWdvY3FodHRwLw==\">https://yobot.win/install/Windows-gocqhttp/</span></p>\n<h3 id=\"验证安装\"><a class=\"anchor\" href=\"#验证安装\">#</a> 验证安装</h3>\n<p>向机器人发送 “version”，机器人会回复当前版本</p>\n<p>向机器人私聊发送 “登录”，机器人会回复登录链接（第一个发送登录的人自动获得主人权限）</p>\n<p>向机器人发送 “重启”（需要权限），机器人会重启</p>\n<h3 id=\"yobot网页设置\"><a class=\"anchor\" href=\"#yobot网页设置\">#</a> yobot 网页设置</h3>\n<p>在私聊发送 “登陆” 后，打开网页设置密码。然后点击左上角返回，在设置项设置基本信息及 boss 血量。</p>\n<p>截止 2021-11：</p>\n<table>\n<thead>\n<tr>\n<th>阶段</th>\n<th>起始周目数</th>\n<th>一王</th>\n<th>二王</th>\n<th>三王</th>\n<th>四王</th>\n<th>五王</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>1 阶段</td>\n<td>1</td>\n<td>6000000</td>\n<td>8000000</td>\n<td>10000000</td>\n<td>12000000</td>\n<td>15000000</td>\n</tr>\n<tr>\n<td>2 阶段</td>\n<td>4</td>\n<td>6000000</td>\n<td>8000000</td>\n<td>10000000</td>\n<td>12000000</td>\n<td>15000000</td>\n</tr>\n<tr>\n<td>3 阶段</td>\n<td>11</td>\n<td>7000000</td>\n<td>9000000</td>\n<td>12000000</td>\n<td>14000000</td>\n<td>17000000</td>\n</tr>\n</tbody>\n</table>\n",
            "tags": [
                "技术"
            ]
        }
    ]
}